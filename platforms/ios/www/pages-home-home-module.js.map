{"version":3,"sources":["webpack:///./node_modules/@aspnet/signalr/dist/esm/AbortController.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/DefaultHttpClient.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/Errors.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/HandshakeProtocol.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/HttpClient.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/HttpConnection.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/HubConnection.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/HubConnectionBuilder.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/IHubProtocol.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/ILogger.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/ITransport.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/JsonHubProtocol.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/Loggers.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/LongPollingTransport.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/ServerSentEventsTransport.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/TextMessageFormat.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/Utils.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/WebSocketTransport.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/XhrHttpClient.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/index.js","webpack:///./src/app/pages/alerta/alerta.module.ts","webpack:///./src/app/pages/alerta/alerta.page.html","webpack:///./src/app/pages/alerta/alerta.page.scss","webpack:///./src/app/pages/alerta/alerta.page.ts","webpack:///./src/app/pages/home/home.module.ts","webpack:///./src/app/pages/home/home.page.html","webpack:///./src/app/pages/home/home.page.scss","webpack:///./src/app/pages/home/home.page.ts","webpack:///./src/app/pages/info-pedido/info-pedido.module.ts","webpack:///./src/app/pages/info-pedido/info-pedido.page.html","webpack:///./src/app/pages/info-pedido/info-pedido.page.scss","webpack:///./src/app/pages/info-pedido/info-pedido.page.ts","webpack:///./src/app/services/homeService/home.service.ts","webpack:///./src/app/services/signalr/signal-r.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AAC0B;AAC3B,2C;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACqC;AACI;AACM;AAChD;AACA;AACA;AACA;AACA,sBAAsB,KAAyC,GAAG,OAAuB,GAAG,SAAO;AACnG;AACA;AACA,+BAA+B,iCAAiC;AAChE;AACA;AACA,uCAAuC,wCAAwC,sBAAsB,8BAA8B;AACnI;AACA;AACA;AACA,mCAAmC,4DAAa;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,kDAAU;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,sDAAU;AACiB;AAC7B,6C;;;;;;;;;;;;AC3DA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,sCAAsC,gCAAgC;AACtE;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACoB;AACrB;AACA;AACA;AACA,sCAAsC,mCAAmC;AACzE;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA,sCAAsC,sCAAsC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACuB;AACxB;AACA;AACA;AACA,sCAAsC,iBAAiB;AACvD;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA,sCAAsC,qCAAqC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACqB;AACtB,kC;;;;;;;;;;;;AC5EA;AAAA;AAAA;AAAA;AAAA;AACA;AACwD;AAChB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oEAAiB;AAChC;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAa;AACzB;AACA;AACA,oDAAoD,oEAAiB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,oEAAiB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oEAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC4B;AAC7B,6C;;;;;;;;;;;;ACvDA;AAAA;AAAA;AAAA;AACA;AACA,gBAAgB,SAAI,IAAI,SAAI;AAC5B,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACuB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,YAAY,0BAA0B;AAC1E;AACA;AACA,oCAAoC,YAAY,2BAA2B;AAC3E;AACA;AACA,oCAAoC,YAAY,6BAA6B;AAC7E;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACqB;AACtB,sC;;;;;;;;;;;;AChDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,mBAAmB,SAAI,IAAI,SAAI;AAC/B,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACwD;AACnB;AAC4B;AACH;AACU;AAC5B;AACc;AAC1D;AACA;AACA;AACA,qCAAqC,UAAc;AACnD;AACA;AACA,sBAAsB,KAAyC,GAAG,OAAuB,GAAG,SAAO;AACnG;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA,QAAQ,0CAAG;AACX,sBAAsB,2DAAY;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,oEAAiB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,0DAAc;AACzD,QAAQ,0CAAG,sBAAsB,0DAAc;AAC/C,wBAAwB,iDAAQ,uDAAuD,0DAAc;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,6DAAiB;AAC1E;AACA,iEAAiE,6DAAiB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,gBAAgB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,sBAAsB;AAC3G;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,0EAAoB;AAC1E;AACA;AACA;AACA,+DAA+D,gCAAgC;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ,4CAA4C,6DAAiB;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,iBAAiB,6DAAiB;AAClC;AACA;AACA;AACA,2BAA2B,sEAAkB;AAC7C,iBAAiB,6DAAiB;AAClC;AACA;AACA;AACA,2BAA2B,oFAAyB;AACpD,iBAAiB,6DAAiB;AAClC,2BAA2B,0EAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA,wBAAwB,6DAAiB;AACzC;AACA,4BAA4B,iDAAQ;AACpC;AACA;AACA,6EAA6E,QAAQ,0DAAc,IAAI,EAAE;AACzG;AACA;AACA,uCAAuC,6DAAiB;AACxD,uCAAuC,6DAAiB;AACxD,wCAAwC,iDAAQ,iCAAiC,6DAAiB;AAClG;AACA;AACA,wCAAwC,iDAAQ,kCAAkC,6DAAiB;AACnG;AACA;AACA;AACA;AACA,oCAAoC,iDAAQ,iCAAiC,6DAAiB,gFAAgF,0DAAc;AAC5L;AACA;AACA;AACA,gCAAgC,iDAAQ,iCAAiC,6DAAiB;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iDAAQ;AACpC;AACA;AACA,4BAA4B,iDAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iDAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACyB;AAC1B;AACA;AACA;AACA,0C;;;;;;;;;;;;AC3bA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,mBAAmB,SAAI,IAAI,SAAI;AAC/B,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACwD;AACX;AACR;AACE;AACvC;AACA;AACA,wCAAwC,oBAAoB;AACrD;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD;AACjD;AACA;AACA;AACA;AACA,QAAQ,0CAAG;AACX,QAAQ,0CAAG;AACX,QAAQ,0CAAG;AACX;AACA;AACA;AACA;AACA;AACA,qCAAqC,oEAAiB;AACtD,qDAAqD,wCAAwC;AAC7F,oDAAoD,sCAAsC;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,OAAO,yDAAW,OAAO;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA,wBAAwB,iDAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA,0BAA0B,8CAAO;AACjC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,yDAAW;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,yDAAW;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,wBAAwB;AAC3E;AACA;AACA,yBAAyB,yDAAW;AACpC;AACA;AACA,yBAAyB,yDAAW;AACpC,yBAAyB,yDAAW;AACpC;AACA;AACA,iDAAiD,yDAAW;AAC5D;AACA;AACA;AACA;AACA;AACA,yBAAyB,yDAAW;AACpC;AACA;AACA,yBAAyB,yDAAW;AACpC,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iDAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iDAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iDAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS,EAAE,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,yDAAyD,8BAA8B,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,oDAAoD,EAAE;AAChG;AACA;AACA;AACA,gCAAgC,iDAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iDAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mDAAmD,gCAAgC,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,yDAAW;AAC7B;AACA;AACA;AACA;AACA;AACA,kBAAkB,yDAAW;AAC7B;AACA;AACA;AACA,CAAC;AACwB;AACzB,yC;;;;;;;;;;;;AClgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACkD;AACF;AACI;AACb;AACM;AAC7C,+BAA+B,oCAAoC;AACnE;AACA;AACA;AACA;AACA,QAAQ,0CAAG;AACX;AACA;AACA;AACA;AACA,8BAA8B,oDAAa;AAC3C;AACA;AACA;AACA;AACA,QAAQ,0CAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oCAAoC;AAC5D;AACA,eAAe,aAAa,eAAe,mCAAmC;AAC9E;AACA;AACA,QAAQ,0CAAG;AACX;AACA;AACA;AACA,mBAAmB,oCAAoC;AACvD;AACA,iBAAiB,cAAc,iBAAiB,oCAAoC;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,8DAAc;AAC3C,eAAe,4DAAa,mCAAmC,mDAAU,gCAAgC,gEAAe;AACxH;AACA;AACA,CAAC;AAC+B;AAChC;AACA;AACA;AACA,gD;;;;;;;;;;;;ACvEA;AAAA;AAAA;AACA;AACA;AACO;AACP;AACA,2EAA2E,wCAAwC;AACnH;AACA,0EAA0E,wCAAwC;AAClH;AACA,0EAA0E,wCAAwC;AAClH;AACA,iFAAiF,8CAA8C;AAC/H;AACA,iFAAiF,8CAA8C;AAC/H;AACA,oEAAoE,kCAAkC;AACtG;AACA,qEAAqE,mCAAmC;AACxG;AACA,CAAC,kCAAkC;AACnC,wC;;;;;;;;;;;;ACpBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B,mC;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACO;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AACzC,sC;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAC6C;AACR;AACS;AACP;AACiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAc;AAC5C;AACA,6BAA6B,iCAAiC;AAC9D;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mDAAU;AAC/B;AACA;AACA,uBAAuB,oEAAiB;AACxC;AACA,+CAA+C,wBAAwB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,yDAAW;AAChC;AACA;AACA,qBAAqB,yDAAW;AAChC;AACA;AACA,qBAAqB,yDAAW;AAChC;AACA;AACA,qBAAqB,yDAAW;AAChC;AACA;AACA,qBAAqB,yDAAW;AAChC;AACA;AACA;AACA;AACA,+BAA+B,iDAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iCAAiC;AAC/D;AACA,eAAe,WAAW;AAC1B,iBAAiB,OAAO;AACxB;AACA;AACA,eAAe,oEAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC0B;AAC3B,2C;;;;;;;;;;;;ACzGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iCAAiC;AACxE;AACA;AACA,CAAC;AACqB;AACtB,mC;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,mBAAmB,SAAI,IAAI,SAAI;AAC/B,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACoD;AACD;AACd;AACS;AACY;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,gEAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0CAAG;AAC3B,wBAAwB,0CAAG;AAC3B,wBAAwB,0CAAG,sBAAsB,0DAAc;AAC/D;AACA,wCAAwC,iDAAQ;AAChD;AACA,+CAA+C,0DAAc;AAC7D;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,+CAA+C,0DAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA,4CAA4C,iDAAQ;AACpD;AACA,kDAAkD,iDAAS;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA,4CAA4C,iDAAQ;AACpD;AACA;AACA;AACA,4CAA4C,iDAAQ;AACpD;AACA,kDAAkD,iDAAS;AAC3D;AACA;AACA;AACA;AACA;AACA,gDAAgD,iDAAQ,oDAAoD,4DAAa;AACzH;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,iDAAQ;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,iDAAQ;AACpD;AACA;AACA,+CAA+C,oDAAY;AAC3D;AACA,gDAAgD,iDAAQ;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,0DAAW;AACjD,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iDAAQ;AACpC;AACA;AACA;AACA;AACA,CAAC;AAC+B;AAChC,gD;;;;;;;;;;;;AC1RA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,mBAAmB,SAAI,IAAI,SAAI;AAC/B,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACqC;AACS;AACY;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0CAAG;AAC3B,wBAAwB,0CAAG;AAC3B,wBAAwB,0CAAG,sBAAsB,0DAAc;AAC/D,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,0DAAc;AACjE;AACA;AACA;AACA;AACA;AACA,qFAAqF,wBAAwB;AAC7G;AACA;AACA;AACA;AACA,qFAAqF,kCAAkC,kBAAkB,EAAE;AAC3I;AACA;AACA;AACA;AACA;AACA,6DAA6D,iDAAQ,4CAA4C,4DAAa;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,iDAAQ;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,0DAAW;AACjD,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACoC;AACrC,qD;;;;;;;;;;;;ACvJA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC4B;AAC7B,6C;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,mBAAmB,SAAI,IAAI,SAAI;AAC/B,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACqC;AACE;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACc;AACf;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,+BAA+B,iDAAQ;AACvC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,+BAA+B,iDAAQ;AACvC;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACO;AACP;AACA,iCAAiC,iDAAQ;AACzC;AACA;AACA,eAAe,mDAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACkB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,EAAE;AAChE;AACA;AACA;AACA,CAAC;AAC8B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iDAAQ;AAC7B,qBAAqB,iDAAQ;AAC7B,0EAA0E,iDAAQ;AAClF;AACA,qBAAqB,iDAAQ;AAC7B,yEAAyE,iDAAQ;AACjF;AACA,qBAAqB,iDAAQ;AAC7B,yEAAyE,iDAAQ;AACjF;AACA;AACA;AACA,wEAAwE,iDAAQ;AAChF;AACA;AACA;AACA;AACA;AACA,CAAC;AACwB;AACzB,iC;;;;;;;;;;;;AC7NA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,mBAAmB,SAAI,IAAI,SAAI;AAC/B,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACqC;AACS;AACD;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0CAAG;AAC3B,wBAAwB,0CAAG;AAC3B,wBAAwB,0CAAG,sBAAsB,0DAAc;AAC/D,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,mDAAmD,0DAAc;AACjE;AACA;AACA;AACA;AACA,iDAAiD,iDAAQ;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,iDAAQ,mDAAmD,4DAAa;AACzH;AACA;AACA;AACA;AACA,kEAAkE,2BAA2B;AAC7F,yBAAyB;AACzB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,4BAA4B,iDAAQ,kDAAkD,4DAAa;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD,oDAAoD;AACpD,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","file":"pages-home-home-module.js","sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController\r\n// We don't actually ever use the API being polyfilled, we always use the polyfill because\r\n// it's a very new API right now.\r\n// Not exported from index.\r\n/** @private */\r\nvar AbortController = /** @class */ (function () {\r\n    function AbortController() {\r\n        this.isAborted = false;\r\n        this.onabort = null;\r\n    }\r\n    AbortController.prototype.abort = function () {\r\n        if (!this.isAborted) {\r\n            this.isAborted = true;\r\n            if (this.onabort) {\r\n                this.onabort();\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(AbortController.prototype, \"signal\", {\r\n        get: function () {\r\n            return this;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AbortController.prototype, \"aborted\", {\r\n        get: function () {\r\n            return this.isAborted;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return AbortController;\r\n}());\r\nexport { AbortController };\r\n//# sourceMappingURL=AbortController.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { AbortError } from \"./Errors\";\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { XhrHttpClient } from \"./XhrHttpClient\";\r\nvar nodeHttpClientModule;\r\nif (typeof XMLHttpRequest === \"undefined\") {\r\n    // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n    // @ts-ignore: TS doesn't know about these names\r\n    var requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n    nodeHttpClientModule = requireFunc(\"./NodeHttpClient\");\r\n}\r\n/** Default implementation of {@link @aspnet/signalr.HttpClient}. */\r\nvar DefaultHttpClient = /** @class */ (function (_super) {\r\n    __extends(DefaultHttpClient, _super);\r\n    /** Creates a new instance of the {@link @aspnet/signalr.DefaultHttpClient}, using the provided {@link @aspnet/signalr.ILogger} to log messages. */\r\n    function DefaultHttpClient(logger) {\r\n        var _this = _super.call(this) || this;\r\n        if (typeof XMLHttpRequest !== \"undefined\") {\r\n            _this.httpClient = new XhrHttpClient(logger);\r\n        }\r\n        else if (typeof nodeHttpClientModule !== \"undefined\") {\r\n            _this.httpClient = new nodeHttpClientModule.NodeHttpClient(logger);\r\n        }\r\n        else {\r\n            throw new Error(\"No HttpClient could be created.\");\r\n        }\r\n        return _this;\r\n    }\r\n    /** @inheritDoc */\r\n    DefaultHttpClient.prototype.send = function (request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n        return this.httpClient.send(request);\r\n    };\r\n    DefaultHttpClient.prototype.getCookieString = function (url) {\r\n        return this.httpClient.getCookieString(url);\r\n    };\r\n    return DefaultHttpClient;\r\n}(HttpClient));\r\nexport { DefaultHttpClient };\r\n//# sourceMappingURL=DefaultHttpClient.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/** Error thrown when an HTTP request fails. */\r\nvar HttpError = /** @class */ (function (_super) {\r\n    __extends(HttpError, _super);\r\n    /** Constructs a new instance of {@link @aspnet/signalr.HttpError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     * @param {number} statusCode The HTTP status code represented by this error.\r\n     */\r\n    function HttpError(errorMessage, statusCode) {\r\n        var _newTarget = this.constructor;\r\n        var _this = this;\r\n        var trueProto = _newTarget.prototype;\r\n        _this = _super.call(this, errorMessage) || this;\r\n        _this.statusCode = statusCode;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        _this.__proto__ = trueProto;\r\n        return _this;\r\n    }\r\n    return HttpError;\r\n}(Error));\r\nexport { HttpError };\r\n/** Error thrown when a timeout elapses. */\r\nvar TimeoutError = /** @class */ (function (_super) {\r\n    __extends(TimeoutError, _super);\r\n    /** Constructs a new instance of {@link @aspnet/signalr.TimeoutError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    function TimeoutError(errorMessage) {\r\n        var _newTarget = this.constructor;\r\n        if (errorMessage === void 0) { errorMessage = \"A timeout occurred.\"; }\r\n        var _this = this;\r\n        var trueProto = _newTarget.prototype;\r\n        _this = _super.call(this, errorMessage) || this;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        _this.__proto__ = trueProto;\r\n        return _this;\r\n    }\r\n    return TimeoutError;\r\n}(Error));\r\nexport { TimeoutError };\r\n/** Error thrown when an action is aborted. */\r\nvar AbortError = /** @class */ (function (_super) {\r\n    __extends(AbortError, _super);\r\n    /** Constructs a new instance of {@link AbortError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    function AbortError(errorMessage) {\r\n        var _newTarget = this.constructor;\r\n        if (errorMessage === void 0) { errorMessage = \"An abort occurred.\"; }\r\n        var _this = this;\r\n        var trueProto = _newTarget.prototype;\r\n        _this = _super.call(this, errorMessage) || this;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        _this.__proto__ = trueProto;\r\n        return _this;\r\n    }\r\n    return AbortError;\r\n}(Error));\r\nexport { AbortError };\r\n//# sourceMappingURL=Errors.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n/** @private */\r\nvar HandshakeProtocol = /** @class */ (function () {\r\n    function HandshakeProtocol() {\r\n    }\r\n    // Handshake request is always JSON\r\n    HandshakeProtocol.prototype.writeHandshakeRequest = function (handshakeRequest) {\r\n        return TextMessageFormat.write(JSON.stringify(handshakeRequest));\r\n    };\r\n    HandshakeProtocol.prototype.parseHandshakeResponse = function (data) {\r\n        var responseMessage;\r\n        var messageData;\r\n        var remainingData;\r\n        if (isArrayBuffer(data) || (typeof Buffer !== \"undefined\" && data instanceof Buffer)) {\r\n            // Format is binary but still need to read JSON text from handshake response\r\n            var binaryData = new Uint8Array(data);\r\n            var separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            var responseLength = separatorIndex + 1;\r\n            messageData = String.fromCharCode.apply(null, binaryData.slice(0, responseLength));\r\n            remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;\r\n        }\r\n        else {\r\n            var textData = data;\r\n            var separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            var responseLength = separatorIndex + 1;\r\n            messageData = textData.substring(0, responseLength);\r\n            remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;\r\n        }\r\n        // At this point we should have just the single handshake message\r\n        var messages = TextMessageFormat.parse(messageData);\r\n        var response = JSON.parse(messages[0]);\r\n        if (response.type) {\r\n            throw new Error(\"Expected a handshake response from the server.\");\r\n        }\r\n        responseMessage = response;\r\n        // multiple messages could have arrived with handshake\r\n        // return additional data to be parsed as usual, or null if all parsed\r\n        return [remainingData, responseMessage];\r\n    };\r\n    return HandshakeProtocol;\r\n}());\r\nexport { HandshakeProtocol };\r\n//# sourceMappingURL=HandshakeProtocol.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\n/** Represents an HTTP response. */\r\nvar HttpResponse = /** @class */ (function () {\r\n    function HttpResponse(statusCode, statusText, content) {\r\n        this.statusCode = statusCode;\r\n        this.statusText = statusText;\r\n        this.content = content;\r\n    }\r\n    return HttpResponse;\r\n}());\r\nexport { HttpResponse };\r\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\r\nvar HttpClient = /** @class */ (function () {\r\n    function HttpClient() {\r\n    }\r\n    HttpClient.prototype.get = function (url, options) {\r\n        return this.send(__assign({}, options, { method: \"GET\", url: url }));\r\n    };\r\n    HttpClient.prototype.post = function (url, options) {\r\n        return this.send(__assign({}, options, { method: \"POST\", url: url }));\r\n    };\r\n    HttpClient.prototype.delete = function (url, options) {\r\n        return this.send(__assign({}, options, { method: \"DELETE\", url: url }));\r\n    };\r\n    /** Gets all cookies that apply to the specified URL.\r\n     *\r\n     * @param url The URL that the cookies are valid for.\r\n     * @returns {string} A string containing all the key-value cookie pairs for the specified URL.\r\n     */\r\n    // @ts-ignore\r\n    HttpClient.prototype.getCookieString = function (url) {\r\n        return \"\";\r\n    };\r\n    return HttpClient;\r\n}());\r\nexport { HttpClient };\r\n//# sourceMappingURL=HttpClient.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { HttpTransportType, TransferFormat } from \"./ITransport\";\r\nimport { LongPollingTransport } from \"./LongPollingTransport\";\r\nimport { ServerSentEventsTransport } from \"./ServerSentEventsTransport\";\r\nimport { Arg, createLogger } from \"./Utils\";\r\nimport { WebSocketTransport } from \"./WebSocketTransport\";\r\nvar MAX_REDIRECTS = 100;\r\nvar WebSocketModule = null;\r\nvar EventSourceModule = null;\r\nif (typeof window === \"undefined\" && typeof require !== \"undefined\") {\r\n    // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n    // @ts-ignore: TS doesn't know about these names\r\n    var requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n    WebSocketModule = requireFunc(\"ws\");\r\n    EventSourceModule = requireFunc(\"eventsource\");\r\n}\r\n/** @private */\r\nvar HttpConnection = /** @class */ (function () {\r\n    function HttpConnection(url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        this.features = {};\r\n        Arg.isRequired(url, \"url\");\r\n        this.logger = createLogger(options.logger);\r\n        this.baseUrl = this.resolveUrl(url);\r\n        options = options || {};\r\n        options.logMessageContent = options.logMessageContent || false;\r\n        var isNode = typeof window === \"undefined\";\r\n        if (!isNode && typeof WebSocket !== \"undefined\" && !options.WebSocket) {\r\n            options.WebSocket = WebSocket;\r\n        }\r\n        else if (isNode && !options.WebSocket) {\r\n            if (WebSocketModule) {\r\n                options.WebSocket = WebSocketModule;\r\n            }\r\n        }\r\n        if (!isNode && typeof EventSource !== \"undefined\" && !options.EventSource) {\r\n            options.EventSource = EventSource;\r\n        }\r\n        else if (isNode && !options.EventSource) {\r\n            if (typeof EventSourceModule !== \"undefined\") {\r\n                options.EventSource = EventSourceModule;\r\n            }\r\n        }\r\n        this.httpClient = options.httpClient || new DefaultHttpClient(this.logger);\r\n        this.connectionState = 2 /* Disconnected */;\r\n        this.options = options;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    HttpConnection.prototype.start = function (transferFormat) {\r\n        transferFormat = transferFormat || TransferFormat.Binary;\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this.logger.log(LogLevel.Debug, \"Starting connection with transfer format '\" + TransferFormat[transferFormat] + \"'.\");\r\n        if (this.connectionState !== 2 /* Disconnected */) {\r\n            return Promise.reject(new Error(\"Cannot start a connection that is not in the 'Disconnected' state.\"));\r\n        }\r\n        this.connectionState = 0 /* Connecting */;\r\n        this.startPromise = this.startInternal(transferFormat);\r\n        return this.startPromise;\r\n    };\r\n    HttpConnection.prototype.send = function (data) {\r\n        if (this.connectionState !== 1 /* Connected */) {\r\n            throw new Error(\"Cannot send data if the connection is not in the 'Connected' State.\");\r\n        }\r\n        // Transport will not be null if state is connected\r\n        return this.transport.send(data);\r\n    };\r\n    HttpConnection.prototype.stop = function (error) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.connectionState = 2 /* Disconnected */;\r\n                        // Set error as soon as possible otherwise there is a race between\r\n                        // the transport closing and providing an error and the error from a close message\r\n                        // We would prefer the close message error.\r\n                        this.stopError = error;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.startPromise];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 4:\r\n                        if (!this.transport) return [3 /*break*/, 6];\r\n                        return [4 /*yield*/, this.transport.stop()];\r\n                    case 5:\r\n                        _a.sent();\r\n                        this.transport = undefined;\r\n                        _a.label = 6;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.startInternal = function (transferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var url, negotiateResponse, redirects, _loop_1, this_1, state_1, e_2;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        url = this.baseUrl;\r\n                        this.accessTokenFactory = this.options.accessTokenFactory;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 12, , 13]);\r\n                        if (!this.options.skipNegotiation) return [3 /*break*/, 5];\r\n                        if (!(this.options.transport === HttpTransportType.WebSockets)) return [3 /*break*/, 3];\r\n                        // No need to add a connection ID in this case\r\n                        this.transport = this.constructTransport(HttpTransportType.WebSockets);\r\n                        // We should just call connect directly in this case.\r\n                        // No fallback or negotiate in this case.\r\n                        return [4 /*yield*/, this.transport.connect(url, transferFormat)];\r\n                    case 2:\r\n                        // We should just call connect directly in this case.\r\n                        // No fallback or negotiate in this case.\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3: throw Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");\r\n                    case 4: return [3 /*break*/, 11];\r\n                    case 5:\r\n                        negotiateResponse = null;\r\n                        redirects = 0;\r\n                        _loop_1 = function () {\r\n                            var accessToken_1;\r\n                            return __generator(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0: return [4 /*yield*/, this_1.getNegotiationResponse(url)];\r\n                                    case 1:\r\n                                        negotiateResponse = _a.sent();\r\n                                        // the user tries to stop the connection when it is being started\r\n                                        if (this_1.connectionState === 2 /* Disconnected */) {\r\n                                            return [2 /*return*/, { value: void 0 }];\r\n                                        }\r\n                                        if (negotiateResponse.error) {\r\n                                            throw Error(negotiateResponse.error);\r\n                                        }\r\n                                        if (negotiateResponse.ProtocolVersion) {\r\n                                            throw Error(\"Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.\");\r\n                                        }\r\n                                        if (negotiateResponse.url) {\r\n                                            url = negotiateResponse.url;\r\n                                        }\r\n                                        if (negotiateResponse.accessToken) {\r\n                                            accessToken_1 = negotiateResponse.accessToken;\r\n                                            this_1.accessTokenFactory = function () { return accessToken_1; };\r\n                                        }\r\n                                        redirects++;\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        };\r\n                        this_1 = this;\r\n                        _a.label = 6;\r\n                    case 6: return [5 /*yield**/, _loop_1()];\r\n                    case 7:\r\n                        state_1 = _a.sent();\r\n                        if (typeof state_1 === \"object\")\r\n                            return [2 /*return*/, state_1.value];\r\n                        _a.label = 8;\r\n                    case 8:\r\n                        if (negotiateResponse.url && redirects < MAX_REDIRECTS) return [3 /*break*/, 6];\r\n                        _a.label = 9;\r\n                    case 9:\r\n                        if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\r\n                            throw Error(\"Negotiate redirection limit exceeded.\");\r\n                        }\r\n                        return [4 /*yield*/, this.createTransport(url, this.options.transport, negotiateResponse, transferFormat)];\r\n                    case 10:\r\n                        _a.sent();\r\n                        _a.label = 11;\r\n                    case 11:\r\n                        if (this.transport instanceof LongPollingTransport) {\r\n                            this.features.inherentKeepAlive = true;\r\n                        }\r\n                        this.transport.onreceive = this.onreceive;\r\n                        this.transport.onclose = function (e) { return _this.stopConnection(e); };\r\n                        // only change the state if we were connecting to not overwrite\r\n                        // the state if the connection is already marked as Disconnected\r\n                        this.changeState(0 /* Connecting */, 1 /* Connected */);\r\n                        return [3 /*break*/, 13];\r\n                    case 12:\r\n                        e_2 = _a.sent();\r\n                        this.logger.log(LogLevel.Error, \"Failed to start the connection: \" + e_2);\r\n                        this.connectionState = 2 /* Disconnected */;\r\n                        this.transport = undefined;\r\n                        throw e_2;\r\n                    case 13: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.getNegotiationResponse = function (url) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, headers, token, negotiateUrl, response, e_3;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!this.accessTokenFactory) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1:\r\n                        token = _b.sent();\r\n                        if (token) {\r\n                            headers = (_a = {},\r\n                                _a[\"Authorization\"] = \"Bearer \" + token,\r\n                                _a);\r\n                        }\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        negotiateUrl = this.resolveNegotiateUrl(url);\r\n                        this.logger.log(LogLevel.Debug, \"Sending negotiation request: \" + negotiateUrl + \".\");\r\n                        _b.label = 3;\r\n                    case 3:\r\n                        _b.trys.push([3, 5, , 6]);\r\n                        return [4 /*yield*/, this.httpClient.post(negotiateUrl, {\r\n                                content: \"\",\r\n                                headers: headers,\r\n                            })];\r\n                    case 4:\r\n                        response = _b.sent();\r\n                        if (response.statusCode !== 200) {\r\n                            throw Error(\"Unexpected status code returned from negotiate \" + response.statusCode);\r\n                        }\r\n                        return [2 /*return*/, JSON.parse(response.content)];\r\n                    case 5:\r\n                        e_3 = _b.sent();\r\n                        this.logger.log(LogLevel.Error, \"Failed to complete negotiation with the server: \" + e_3);\r\n                        throw e_3;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.createConnectUrl = function (url, connectionId) {\r\n        if (!connectionId) {\r\n            return url;\r\n        }\r\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + (\"id=\" + connectionId);\r\n    };\r\n    HttpConnection.prototype.createTransport = function (url, requestedTransport, negotiateResponse, requestedTransferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var connectUrl, transports, _i, transports_1, endpoint, transport, ex_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        connectUrl = this.createConnectUrl(url, negotiateResponse.connectionId);\r\n                        if (!this.isITransport(requestedTransport)) return [3 /*break*/, 2];\r\n                        this.logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\r\n                        this.transport = requestedTransport;\r\n                        return [4 /*yield*/, this.transport.connect(connectUrl, requestedTransferFormat)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        // only change the state if we were connecting to not overwrite\r\n                        // the state if the connection is already marked as Disconnected\r\n                        this.changeState(0 /* Connecting */, 1 /* Connected */);\r\n                        return [2 /*return*/];\r\n                    case 2:\r\n                        transports = negotiateResponse.availableTransports || [];\r\n                        _i = 0, transports_1 = transports;\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        if (!(_i < transports_1.length)) return [3 /*break*/, 9];\r\n                        endpoint = transports_1[_i];\r\n                        this.connectionState = 0 /* Connecting */;\r\n                        transport = this.resolveTransport(endpoint, requestedTransport, requestedTransferFormat);\r\n                        if (!(typeof transport === \"number\")) return [3 /*break*/, 8];\r\n                        this.transport = this.constructTransport(transport);\r\n                        if (!!negotiateResponse.connectionId) return [3 /*break*/, 5];\r\n                        return [4 /*yield*/, this.getNegotiationResponse(url)];\r\n                    case 4:\r\n                        negotiateResponse = _a.sent();\r\n                        connectUrl = this.createConnectUrl(url, negotiateResponse.connectionId);\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        _a.trys.push([5, 7, , 8]);\r\n                        return [4 /*yield*/, this.transport.connect(connectUrl, requestedTransferFormat)];\r\n                    case 6:\r\n                        _a.sent();\r\n                        this.changeState(0 /* Connecting */, 1 /* Connected */);\r\n                        return [2 /*return*/];\r\n                    case 7:\r\n                        ex_1 = _a.sent();\r\n                        this.logger.log(LogLevel.Error, \"Failed to start the transport '\" + HttpTransportType[transport] + \"': \" + ex_1);\r\n                        this.connectionState = 2 /* Disconnected */;\r\n                        negotiateResponse.connectionId = undefined;\r\n                        return [3 /*break*/, 8];\r\n                    case 8:\r\n                        _i++;\r\n                        return [3 /*break*/, 3];\r\n                    case 9: throw new Error(\"Unable to initialize any of the available transports.\");\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.constructTransport = function (transport) {\r\n        switch (transport) {\r\n            case HttpTransportType.WebSockets:\r\n                if (!this.options.WebSocket) {\r\n                    throw new Error(\"'WebSocket' is not supported in your environment.\");\r\n                }\r\n                return new WebSocketTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false, this.options.WebSocket);\r\n            case HttpTransportType.ServerSentEvents:\r\n                if (!this.options.EventSource) {\r\n                    throw new Error(\"'EventSource' is not supported in your environment.\");\r\n                }\r\n                return new ServerSentEventsTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false, this.options.EventSource);\r\n            case HttpTransportType.LongPolling:\r\n                return new LongPollingTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false);\r\n            default:\r\n                throw new Error(\"Unknown transport: \" + transport + \".\");\r\n        }\r\n    };\r\n    HttpConnection.prototype.resolveTransport = function (endpoint, requestedTransport, requestedTransferFormat) {\r\n        var transport = HttpTransportType[endpoint.transport];\r\n        if (transport === null || transport === undefined) {\r\n            this.logger.log(LogLevel.Debug, \"Skipping transport '\" + endpoint.transport + \"' because it is not supported by this client.\");\r\n        }\r\n        else {\r\n            var transferFormats = endpoint.transferFormats.map(function (s) { return TransferFormat[s]; });\r\n            if (transportMatches(requestedTransport, transport)) {\r\n                if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\r\n                    if ((transport === HttpTransportType.WebSockets && !this.options.WebSocket) ||\r\n                        (transport === HttpTransportType.ServerSentEvents && !this.options.EventSource)) {\r\n                        this.logger.log(LogLevel.Debug, \"Skipping transport '\" + HttpTransportType[transport] + \"' because it is not supported in your environment.'\");\r\n                    }\r\n                    else {\r\n                        this.logger.log(LogLevel.Debug, \"Selecting transport '\" + HttpTransportType[transport] + \"'.\");\r\n                        return transport;\r\n                    }\r\n                }\r\n                else {\r\n                    this.logger.log(LogLevel.Debug, \"Skipping transport '\" + HttpTransportType[transport] + \"' because it does not support the requested transfer format '\" + TransferFormat[requestedTransferFormat] + \"'.\");\r\n                }\r\n            }\r\n            else {\r\n                this.logger.log(LogLevel.Debug, \"Skipping transport '\" + HttpTransportType[transport] + \"' because it was disabled by the client.\");\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    HttpConnection.prototype.isITransport = function (transport) {\r\n        return transport && typeof (transport) === \"object\" && \"connect\" in transport;\r\n    };\r\n    HttpConnection.prototype.changeState = function (from, to) {\r\n        if (this.connectionState === from) {\r\n            this.connectionState = to;\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    HttpConnection.prototype.stopConnection = function (error) {\r\n        this.transport = undefined;\r\n        // If we have a stopError, it takes precedence over the error from the transport\r\n        error = this.stopError || error;\r\n        if (error) {\r\n            this.logger.log(LogLevel.Error, \"Connection disconnected with error '\" + error + \"'.\");\r\n        }\r\n        else {\r\n            this.logger.log(LogLevel.Information, \"Connection disconnected.\");\r\n        }\r\n        this.connectionState = 2 /* Disconnected */;\r\n        if (this.onclose) {\r\n            this.onclose(error);\r\n        }\r\n    };\r\n    HttpConnection.prototype.resolveUrl = function (url) {\r\n        // startsWith is not supported in IE\r\n        if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\r\n            return url;\r\n        }\r\n        if (typeof window === \"undefined\" || !window || !window.document) {\r\n            throw new Error(\"Cannot resolve '\" + url + \"'.\");\r\n        }\r\n        // Setting the url to the href propery of an anchor tag handles normalization\r\n        // for us. There are 3 main cases.\r\n        // 1. Relative  path normalization e.g \"b\" -> \"http://localhost:5000/a/b\"\r\n        // 2. Absolute path normalization e.g \"/a/b\" -> \"http://localhost:5000/a/b\"\r\n        // 3. Networkpath reference normalization e.g \"//localhost:5000/a/b\" -> \"http://localhost:5000/a/b\"\r\n        var aTag = window.document.createElement(\"a\");\r\n        aTag.href = url;\r\n        this.logger.log(LogLevel.Information, \"Normalizing '\" + url + \"' to '\" + aTag.href + \"'.\");\r\n        return aTag.href;\r\n    };\r\n    HttpConnection.prototype.resolveNegotiateUrl = function (url) {\r\n        var index = url.indexOf(\"?\");\r\n        var negotiateUrl = url.substring(0, index === -1 ? url.length : index);\r\n        if (negotiateUrl[negotiateUrl.length - 1] !== \"/\") {\r\n            negotiateUrl += \"/\";\r\n        }\r\n        negotiateUrl += \"negotiate\";\r\n        negotiateUrl += index === -1 ? \"\" : url.substring(index);\r\n        return negotiateUrl;\r\n    };\r\n    return HttpConnection;\r\n}());\r\nexport { HttpConnection };\r\nfunction transportMatches(requestedTransport, actualTransport) {\r\n    return !requestedTransport || ((actualTransport & requestedTransport) !== 0);\r\n}\r\n//# sourceMappingURL=HttpConnection.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { HandshakeProtocol } from \"./HandshakeProtocol\";\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { Arg, Subject } from \"./Utils\";\r\nvar DEFAULT_TIMEOUT_IN_MS = 30 * 1000;\r\nvar DEFAULT_PING_INTERVAL_IN_MS = 15 * 1000;\r\n/** Describes the current state of the {@link HubConnection} to the server. */\r\nexport var HubConnectionState;\r\n(function (HubConnectionState) {\r\n    /** The hub connection is disconnected. */\r\n    HubConnectionState[HubConnectionState[\"Disconnected\"] = 0] = \"Disconnected\";\r\n    /** The hub connection is connected. */\r\n    HubConnectionState[HubConnectionState[\"Connected\"] = 1] = \"Connected\";\r\n})(HubConnectionState || (HubConnectionState = {}));\r\n/** Represents a connection to a SignalR Hub. */\r\nvar HubConnection = /** @class */ (function () {\r\n    function HubConnection(connection, logger, protocol) {\r\n        var _this = this;\r\n        Arg.isRequired(connection, \"connection\");\r\n        Arg.isRequired(logger, \"logger\");\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.serverTimeoutInMilliseconds = DEFAULT_TIMEOUT_IN_MS;\r\n        this.keepAliveIntervalInMilliseconds = DEFAULT_PING_INTERVAL_IN_MS;\r\n        this.logger = logger;\r\n        this.protocol = protocol;\r\n        this.connection = connection;\r\n        this.handshakeProtocol = new HandshakeProtocol();\r\n        this.connection.onreceive = function (data) { return _this.processIncomingData(data); };\r\n        this.connection.onclose = function (error) { return _this.connectionClosed(error); };\r\n        this.callbacks = {};\r\n        this.methods = {};\r\n        this.closedCallbacks = [];\r\n        this.id = 0;\r\n        this.receivedHandshakeResponse = false;\r\n        this.connectionState = HubConnectionState.Disconnected;\r\n        this.cachedPingMessage = this.protocol.writeMessage({ type: MessageType.Ping });\r\n    }\r\n    /** @internal */\r\n    // Using a public static factory method means we can have a private constructor and an _internal_\r\n    // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\r\n    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\r\n    // public parameter-less constructor.\r\n    HubConnection.create = function (connection, logger, protocol) {\r\n        return new HubConnection(connection, logger, protocol);\r\n    };\r\n    Object.defineProperty(HubConnection.prototype, \"state\", {\r\n        /** Indicates the state of the {@link HubConnection} to the server. */\r\n        get: function () {\r\n            return this.connectionState;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** Starts the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\r\n     */\r\n    HubConnection.prototype.start = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var handshakeRequest, handshakePromise;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        handshakeRequest = {\r\n                            protocol: this.protocol.name,\r\n                            version: this.protocol.version,\r\n                        };\r\n                        this.logger.log(LogLevel.Debug, \"Starting HubConnection.\");\r\n                        this.receivedHandshakeResponse = false;\r\n                        handshakePromise = new Promise(function (resolve, reject) {\r\n                            _this.handshakeResolver = resolve;\r\n                            _this.handshakeRejecter = reject;\r\n                        });\r\n                        return [4 /*yield*/, this.connection.start(this.protocol.transferFormat)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        this.logger.log(LogLevel.Debug, \"Sending handshake request.\");\r\n                        return [4 /*yield*/, this.sendMessage(this.handshakeProtocol.writeHandshakeRequest(handshakeRequest))];\r\n                    case 2:\r\n                        _a.sent();\r\n                        this.logger.log(LogLevel.Information, \"Using HubProtocol '\" + this.protocol.name + \"'.\");\r\n                        // defensively cleanup timeout in case we receive a message from the server before we finish start\r\n                        this.cleanupTimeout();\r\n                        this.resetTimeoutPeriod();\r\n                        this.resetKeepAliveInterval();\r\n                        // Wait for the handshake to complete before marking connection as connected\r\n                        return [4 /*yield*/, handshakePromise];\r\n                    case 3:\r\n                        // Wait for the handshake to complete before marking connection as connected\r\n                        _a.sent();\r\n                        this.connectionState = HubConnectionState.Connected;\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /** Stops the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\r\n     */\r\n    HubConnection.prototype.stop = function () {\r\n        this.logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\r\n        this.cleanupTimeout();\r\n        this.cleanupPingTimer();\r\n        return this.connection.stop();\r\n    };\r\n    /** Invokes a streaming hub method on the server using the specified name and arguments.\r\n     *\r\n     * @typeparam T The type of the items returned by the server.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\r\n     */\r\n    HubConnection.prototype.stream = function (methodName) {\r\n        var _this = this;\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var invocationDescriptor = this.createStreamInvocation(methodName, args);\r\n        var subject = new Subject(function () {\r\n            var cancelInvocation = _this.createCancelInvocation(invocationDescriptor.invocationId);\r\n            var cancelMessage = _this.protocol.writeMessage(cancelInvocation);\r\n            delete _this.callbacks[invocationDescriptor.invocationId];\r\n            return _this.sendMessage(cancelMessage);\r\n        });\r\n        this.callbacks[invocationDescriptor.invocationId] = function (invocationEvent, error) {\r\n            if (error) {\r\n                subject.error(error);\r\n                return;\r\n            }\r\n            else if (invocationEvent) {\r\n                // invocationEvent will not be null when an error is not passed to the callback\r\n                if (invocationEvent.type === MessageType.Completion) {\r\n                    if (invocationEvent.error) {\r\n                        subject.error(new Error(invocationEvent.error));\r\n                    }\r\n                    else {\r\n                        subject.complete();\r\n                    }\r\n                }\r\n                else {\r\n                    subject.next((invocationEvent.item));\r\n                }\r\n            }\r\n        };\r\n        var message = this.protocol.writeMessage(invocationDescriptor);\r\n        this.sendMessage(message)\r\n            .catch(function (e) {\r\n            subject.error(e);\r\n            delete _this.callbacks[invocationDescriptor.invocationId];\r\n        });\r\n        return subject;\r\n    };\r\n    HubConnection.prototype.sendMessage = function (message) {\r\n        this.resetKeepAliveInterval();\r\n        return this.connection.send(message);\r\n    };\r\n    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\r\n     *\r\n     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\r\n     * be processing the invocation.\r\n     *\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\r\n     */\r\n    HubConnection.prototype.send = function (methodName) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var invocationDescriptor = this.createInvocation(methodName, args, true);\r\n        var message = this.protocol.writeMessage(invocationDescriptor);\r\n        return this.sendMessage(message);\r\n    };\r\n    /** Invokes a hub method on the server using the specified name and arguments.\r\n     *\r\n     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\r\n     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\r\n     * resolving the Promise.\r\n     *\r\n     * @typeparam T The expected return type.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\r\n     */\r\n    HubConnection.prototype.invoke = function (methodName) {\r\n        var _this = this;\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var invocationDescriptor = this.createInvocation(methodName, args, false);\r\n        var p = new Promise(function (resolve, reject) {\r\n            // invocationId will always have a value for a non-blocking invocation\r\n            _this.callbacks[invocationDescriptor.invocationId] = function (invocationEvent, error) {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n                else if (invocationEvent) {\r\n                    // invocationEvent will not be null when an error is not passed to the callback\r\n                    if (invocationEvent.type === MessageType.Completion) {\r\n                        if (invocationEvent.error) {\r\n                            reject(new Error(invocationEvent.error));\r\n                        }\r\n                        else {\r\n                            resolve(invocationEvent.result);\r\n                        }\r\n                    }\r\n                    else {\r\n                        reject(new Error(\"Unexpected message type: \" + invocationEvent.type));\r\n                    }\r\n                }\r\n            };\r\n            var message = _this.protocol.writeMessage(invocationDescriptor);\r\n            _this.sendMessage(message)\r\n                .catch(function (e) {\r\n                reject(e);\r\n                // invocationId will always have a value for a non-blocking invocation\r\n                delete _this.callbacks[invocationDescriptor.invocationId];\r\n            });\r\n        });\r\n        return p;\r\n    };\r\n    /** Registers a handler that will be invoked when the hub method with the specified method name is invoked.\r\n     *\r\n     * @param {string} methodName The name of the hub method to define.\r\n     * @param {Function} newMethod The handler that will be raised when the hub method is invoked.\r\n     */\r\n    HubConnection.prototype.on = function (methodName, newMethod) {\r\n        if (!methodName || !newMethod) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        if (!this.methods[methodName]) {\r\n            this.methods[methodName] = [];\r\n        }\r\n        // Preventing adding the same handler multiple times.\r\n        if (this.methods[methodName].indexOf(newMethod) !== -1) {\r\n            return;\r\n        }\r\n        this.methods[methodName].push(newMethod);\r\n    };\r\n    HubConnection.prototype.off = function (methodName, method) {\r\n        if (!methodName) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        var handlers = this.methods[methodName];\r\n        if (!handlers) {\r\n            return;\r\n        }\r\n        if (method) {\r\n            var removeIdx = handlers.indexOf(method);\r\n            if (removeIdx !== -1) {\r\n                handlers.splice(removeIdx, 1);\r\n                if (handlers.length === 0) {\r\n                    delete this.methods[methodName];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            delete this.methods[methodName];\r\n        }\r\n    };\r\n    /** Registers a handler that will be invoked when the connection is closed.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\r\n     */\r\n    HubConnection.prototype.onclose = function (callback) {\r\n        if (callback) {\r\n            this.closedCallbacks.push(callback);\r\n        }\r\n    };\r\n    HubConnection.prototype.processIncomingData = function (data) {\r\n        this.cleanupTimeout();\r\n        if (!this.receivedHandshakeResponse) {\r\n            data = this.processHandshakeResponse(data);\r\n            this.receivedHandshakeResponse = true;\r\n        }\r\n        // Data may have all been read when processing handshake response\r\n        if (data) {\r\n            // Parse the messages\r\n            var messages = this.protocol.parseMessages(data, this.logger);\r\n            for (var _i = 0, messages_1 = messages; _i < messages_1.length; _i++) {\r\n                var message = messages_1[_i];\r\n                switch (message.type) {\r\n                    case MessageType.Invocation:\r\n                        this.invokeClientMethod(message);\r\n                        break;\r\n                    case MessageType.StreamItem:\r\n                    case MessageType.Completion:\r\n                        var callback = this.callbacks[message.invocationId];\r\n                        if (callback != null) {\r\n                            if (message.type === MessageType.Completion) {\r\n                                delete this.callbacks[message.invocationId];\r\n                            }\r\n                            callback(message);\r\n                        }\r\n                        break;\r\n                    case MessageType.Ping:\r\n                        // Don't care about pings\r\n                        break;\r\n                    case MessageType.Close:\r\n                        this.logger.log(LogLevel.Information, \"Close message received from server.\");\r\n                        // We don't want to wait on the stop itself.\r\n                        // tslint:disable-next-line:no-floating-promises\r\n                        this.connection.stop(message.error ? new Error(\"Server returned an error on close: \" + message.error) : undefined);\r\n                        break;\r\n                    default:\r\n                        this.logger.log(LogLevel.Warning, \"Invalid message type: \" + message.type + \".\");\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        this.resetTimeoutPeriod();\r\n    };\r\n    HubConnection.prototype.processHandshakeResponse = function (data) {\r\n        var _a;\r\n        var responseMessage;\r\n        var remainingData;\r\n        try {\r\n            _a = this.handshakeProtocol.parseHandshakeResponse(data), remainingData = _a[0], responseMessage = _a[1];\r\n        }\r\n        catch (e) {\r\n            var message = \"Error parsing handshake response: \" + e;\r\n            this.logger.log(LogLevel.Error, message);\r\n            var error = new Error(message);\r\n            // We don't want to wait on the stop itself.\r\n            // tslint:disable-next-line:no-floating-promises\r\n            this.connection.stop(error);\r\n            this.handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        if (responseMessage.error) {\r\n            var message = \"Server returned handshake error: \" + responseMessage.error;\r\n            this.logger.log(LogLevel.Error, message);\r\n            this.handshakeRejecter(message);\r\n            // We don't want to wait on the stop itself.\r\n            // tslint:disable-next-line:no-floating-promises\r\n            this.connection.stop(new Error(message));\r\n            throw new Error(message);\r\n        }\r\n        else {\r\n            this.logger.log(LogLevel.Debug, \"Server handshake complete.\");\r\n        }\r\n        this.handshakeResolver();\r\n        return remainingData;\r\n    };\r\n    HubConnection.prototype.resetKeepAliveInterval = function () {\r\n        var _this = this;\r\n        this.cleanupPingTimer();\r\n        this.pingServerHandle = setTimeout(function () { return __awaiter(_this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!(this.connectionState === HubConnectionState.Connected)) return [3 /*break*/, 4];\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.sendMessage(this.cachedPingMessage)];\r\n                    case 2:\r\n                        _b.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        _a = _b.sent();\r\n                        // We don't care about the error. It should be seen elsewhere in the client.\r\n                        // The connection is probably in a bad or closed state now, cleanup the timer so it stops triggering\r\n                        this.cleanupPingTimer();\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        }); }, this.keepAliveIntervalInMilliseconds);\r\n    };\r\n    HubConnection.prototype.resetTimeoutPeriod = function () {\r\n        var _this = this;\r\n        if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\r\n            // Set the timeout timer\r\n            this.timeoutHandle = setTimeout(function () { return _this.serverTimeout(); }, this.serverTimeoutInMilliseconds);\r\n        }\r\n    };\r\n    HubConnection.prototype.serverTimeout = function () {\r\n        // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\r\n        // Terminate the connection, but we don't need to wait on the promise.\r\n        // tslint:disable-next-line:no-floating-promises\r\n        this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\r\n    };\r\n    HubConnection.prototype.invokeClientMethod = function (invocationMessage) {\r\n        var _this = this;\r\n        var methods = this.methods[invocationMessage.target.toLowerCase()];\r\n        if (methods) {\r\n            methods.forEach(function (m) { return m.apply(_this, invocationMessage.arguments); });\r\n            if (invocationMessage.invocationId) {\r\n                // This is not supported in v1. So we return an error to avoid blocking the server waiting for the response.\r\n                var message = \"Server requested a response, which is not supported in this version of the client.\";\r\n                this.logger.log(LogLevel.Error, message);\r\n                // We don't need to wait on this Promise.\r\n                // tslint:disable-next-line:no-floating-promises\r\n                this.connection.stop(new Error(message));\r\n            }\r\n        }\r\n        else {\r\n            this.logger.log(LogLevel.Warning, \"No client method with the name '\" + invocationMessage.target + \"' found.\");\r\n        }\r\n    };\r\n    HubConnection.prototype.connectionClosed = function (error) {\r\n        var _this = this;\r\n        var callbacks = this.callbacks;\r\n        this.callbacks = {};\r\n        this.connectionState = HubConnectionState.Disconnected;\r\n        // if handshake is in progress start will be waiting for the handshake promise, so we complete it\r\n        // if it has already completed this should just noop\r\n        if (this.handshakeRejecter) {\r\n            this.handshakeRejecter(error);\r\n        }\r\n        Object.keys(callbacks)\r\n            .forEach(function (key) {\r\n            var callback = callbacks[key];\r\n            callback(null, error ? error : new Error(\"Invocation canceled due to connection being closed.\"));\r\n        });\r\n        this.cleanupTimeout();\r\n        this.cleanupPingTimer();\r\n        this.closedCallbacks.forEach(function (c) { return c.apply(_this, [error]); });\r\n    };\r\n    HubConnection.prototype.cleanupPingTimer = function () {\r\n        if (this.pingServerHandle) {\r\n            clearTimeout(this.pingServerHandle);\r\n        }\r\n    };\r\n    HubConnection.prototype.cleanupTimeout = function () {\r\n        if (this.timeoutHandle) {\r\n            clearTimeout(this.timeoutHandle);\r\n        }\r\n    };\r\n    HubConnection.prototype.createInvocation = function (methodName, args, nonblocking) {\r\n        if (nonblocking) {\r\n            return {\r\n                arguments: args,\r\n                target: methodName,\r\n                type: MessageType.Invocation,\r\n            };\r\n        }\r\n        else {\r\n            var id = this.id;\r\n            this.id++;\r\n            return {\r\n                arguments: args,\r\n                invocationId: id.toString(),\r\n                target: methodName,\r\n                type: MessageType.Invocation,\r\n            };\r\n        }\r\n    };\r\n    HubConnection.prototype.createStreamInvocation = function (methodName, args) {\r\n        var id = this.id;\r\n        this.id++;\r\n        return {\r\n            arguments: args,\r\n            invocationId: id.toString(),\r\n            target: methodName,\r\n            type: MessageType.StreamInvocation,\r\n        };\r\n    };\r\n    HubConnection.prototype.createCancelInvocation = function (id) {\r\n        return {\r\n            invocationId: id,\r\n            type: MessageType.CancelInvocation,\r\n        };\r\n    };\r\n    return HubConnection;\r\n}());\r\nexport { HubConnection };\r\n//# sourceMappingURL=HubConnection.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nimport { HttpConnection } from \"./HttpConnection\";\r\nimport { HubConnection } from \"./HubConnection\";\r\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { Arg, ConsoleLogger } from \"./Utils\";\r\n/** A builder for configuring {@link @aspnet/signalr.HubConnection} instances. */\r\nvar HubConnectionBuilder = /** @class */ (function () {\r\n    function HubConnectionBuilder() {\r\n    }\r\n    HubConnectionBuilder.prototype.configureLogging = function (logging) {\r\n        Arg.isRequired(logging, \"logging\");\r\n        if (isLogger(logging)) {\r\n            this.logger = logging;\r\n        }\r\n        else {\r\n            this.logger = new ConsoleLogger(logging);\r\n        }\r\n        return this;\r\n    };\r\n    HubConnectionBuilder.prototype.withUrl = function (url, transportTypeOrOptions) {\r\n        Arg.isRequired(url, \"url\");\r\n        this.url = url;\r\n        // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\r\n        // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\r\n        if (typeof transportTypeOrOptions === \"object\") {\r\n            this.httpConnectionOptions = transportTypeOrOptions;\r\n        }\r\n        else {\r\n            this.httpConnectionOptions = {\r\n                transport: transportTypeOrOptions,\r\n            };\r\n        }\r\n        return this;\r\n    };\r\n    /** Configures the {@link @aspnet/signalr.HubConnection} to use the specified Hub Protocol.\r\n     *\r\n     * @param {IHubProtocol} protocol The {@link @aspnet/signalr.IHubProtocol} implementation to use.\r\n     */\r\n    HubConnectionBuilder.prototype.withHubProtocol = function (protocol) {\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.protocol = protocol;\r\n        return this;\r\n    };\r\n    /** Creates a {@link @aspnet/signalr.HubConnection} from the configuration options specified in this builder.\r\n     *\r\n     * @returns {HubConnection} The configured {@link @aspnet/signalr.HubConnection}.\r\n     */\r\n    HubConnectionBuilder.prototype.build = function () {\r\n        // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\r\n        // provided to configureLogger\r\n        var httpConnectionOptions = this.httpConnectionOptions || {};\r\n        // If it's 'null', the user **explicitly** asked for null, don't mess with it.\r\n        if (httpConnectionOptions.logger === undefined) {\r\n            // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\r\n            httpConnectionOptions.logger = this.logger;\r\n        }\r\n        // Now create the connection\r\n        if (!this.url) {\r\n            throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\r\n        }\r\n        var connection = new HttpConnection(this.url, httpConnectionOptions);\r\n        return HubConnection.create(connection, this.logger || NullLogger.instance, this.protocol || new JsonHubProtocol());\r\n    };\r\n    return HubConnectionBuilder;\r\n}());\r\nexport { HubConnectionBuilder };\r\nfunction isLogger(logger) {\r\n    return logger.log !== undefined;\r\n}\r\n//# sourceMappingURL=HubConnectionBuilder.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n/** Defines the type of a Hub Message. */\r\nexport var MessageType;\r\n(function (MessageType) {\r\n    /** Indicates the message is an Invocation message and implements the {@link @aspnet/signalr.InvocationMessage} interface. */\r\n    MessageType[MessageType[\"Invocation\"] = 1] = \"Invocation\";\r\n    /** Indicates the message is a StreamItem message and implements the {@link @aspnet/signalr.StreamItemMessage} interface. */\r\n    MessageType[MessageType[\"StreamItem\"] = 2] = \"StreamItem\";\r\n    /** Indicates the message is a Completion message and implements the {@link @aspnet/signalr.CompletionMessage} interface. */\r\n    MessageType[MessageType[\"Completion\"] = 3] = \"Completion\";\r\n    /** Indicates the message is a Stream Invocation message and implements the {@link @aspnet/signalr.StreamInvocationMessage} interface. */\r\n    MessageType[MessageType[\"StreamInvocation\"] = 4] = \"StreamInvocation\";\r\n    /** Indicates the message is a Cancel Invocation message and implements the {@link @aspnet/signalr.CancelInvocationMessage} interface. */\r\n    MessageType[MessageType[\"CancelInvocation\"] = 5] = \"CancelInvocation\";\r\n    /** Indicates the message is a Ping message and implements the {@link @aspnet/signalr.PingMessage} interface. */\r\n    MessageType[MessageType[\"Ping\"] = 6] = \"Ping\";\r\n    /** Indicates the message is a Close message and implements the {@link @aspnet/signalr.CloseMessage} interface. */\r\n    MessageType[MessageType[\"Close\"] = 7] = \"Close\";\r\n})(MessageType || (MessageType = {}));\r\n//# sourceMappingURL=IHubProtocol.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\r\n/** Indicates the severity of a log message.\r\n *\r\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\r\n */\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    /** Log level for very low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\r\n    /** Log level for low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\r\n    /** Log level for informational diagnostic messages. */\r\n    LogLevel[LogLevel[\"Information\"] = 2] = \"Information\";\r\n    /** Log level for diagnostic messages that indicate a non-fatal problem. */\r\n    LogLevel[LogLevel[\"Warning\"] = 3] = \"Warning\";\r\n    /** Log level for diagnostic messages that indicate a failure in the current operation. */\r\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\r\n    /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\r\n    LogLevel[LogLevel[\"Critical\"] = 5] = \"Critical\";\r\n    /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\r\n    LogLevel[LogLevel[\"None\"] = 6] = \"None\";\r\n})(LogLevel || (LogLevel = {}));\r\n//# sourceMappingURL=ILogger.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// This will be treated as a bit flag in the future, so we keep it using power-of-two values.\r\n/** Specifies a specific HTTP transport type. */\r\nexport var HttpTransportType;\r\n(function (HttpTransportType) {\r\n    /** Specifies no transport preference. */\r\n    HttpTransportType[HttpTransportType[\"None\"] = 0] = \"None\";\r\n    /** Specifies the WebSockets transport. */\r\n    HttpTransportType[HttpTransportType[\"WebSockets\"] = 1] = \"WebSockets\";\r\n    /** Specifies the Server-Sent Events transport. */\r\n    HttpTransportType[HttpTransportType[\"ServerSentEvents\"] = 2] = \"ServerSentEvents\";\r\n    /** Specifies the Long Polling transport. */\r\n    HttpTransportType[HttpTransportType[\"LongPolling\"] = 4] = \"LongPolling\";\r\n})(HttpTransportType || (HttpTransportType = {}));\r\n/** Specifies the transfer format for a connection. */\r\nexport var TransferFormat;\r\n(function (TransferFormat) {\r\n    /** Specifies that only text data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Text\"] = 1] = \"Text\";\r\n    /** Specifies that binary data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Binary\"] = 2] = \"Binary\";\r\n})(TransferFormat || (TransferFormat = {}));\r\n//# sourceMappingURL=ITransport.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nvar JSON_HUB_PROTOCOL_NAME = \"json\";\r\n/** Implements the JSON Hub Protocol. */\r\nvar JsonHubProtocol = /** @class */ (function () {\r\n    function JsonHubProtocol() {\r\n        /** @inheritDoc */\r\n        this.name = JSON_HUB_PROTOCOL_NAME;\r\n        /** @inheritDoc */\r\n        this.version = 1;\r\n        /** @inheritDoc */\r\n        this.transferFormat = TransferFormat.Text;\r\n    }\r\n    /** Creates an array of {@link @aspnet/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * @param {string} input A string containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    JsonHubProtocol.prototype.parseMessages = function (input, logger) {\r\n        // The interface does allow \"ArrayBuffer\" to be passed in, but this implementation does not. So let's throw a useful error.\r\n        if (typeof input !== \"string\") {\r\n            throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");\r\n        }\r\n        if (!input) {\r\n            return [];\r\n        }\r\n        if (logger === null) {\r\n            logger = NullLogger.instance;\r\n        }\r\n        // Parse the messages\r\n        var messages = TextMessageFormat.parse(input);\r\n        var hubMessages = [];\r\n        for (var _i = 0, messages_1 = messages; _i < messages_1.length; _i++) {\r\n            var message = messages_1[_i];\r\n            var parsedMessage = JSON.parse(message);\r\n            if (typeof parsedMessage.type !== \"number\") {\r\n                throw new Error(\"Invalid payload.\");\r\n            }\r\n            switch (parsedMessage.type) {\r\n                case MessageType.Invocation:\r\n                    this.isInvocationMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.StreamItem:\r\n                    this.isStreamItemMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Completion:\r\n                    this.isCompletionMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Ping:\r\n                    // Single value, no need to validate\r\n                    break;\r\n                case MessageType.Close:\r\n                    // All optional values, no need to validate\r\n                    break;\r\n                default:\r\n                    // Future protocol changes can add message types, old clients can ignore them\r\n                    logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\r\n                    continue;\r\n            }\r\n            hubMessages.push(parsedMessage);\r\n        }\r\n        return hubMessages;\r\n    };\r\n    /** Writes the specified {@link @aspnet/signalr.HubMessage} to a string and returns it.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string} A string containing the serialized representation of the message.\r\n     */\r\n    JsonHubProtocol.prototype.writeMessage = function (message) {\r\n        return TextMessageFormat.write(JSON.stringify(message));\r\n    };\r\n    JsonHubProtocol.prototype.isInvocationMessage = function (message) {\r\n        this.assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\r\n        if (message.invocationId !== undefined) {\r\n            this.assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message.\");\r\n        }\r\n    };\r\n    JsonHubProtocol.prototype.isStreamItemMessage = function (message) {\r\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message.\");\r\n        if (message.item === undefined) {\r\n            throw new Error(\"Invalid payload for StreamItem message.\");\r\n        }\r\n    };\r\n    JsonHubProtocol.prototype.isCompletionMessage = function (message) {\r\n        if (message.result && message.error) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n        if (!message.result && message.error) {\r\n            this.assertNotEmptyString(message.error, \"Invalid payload for Completion message.\");\r\n        }\r\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message.\");\r\n    };\r\n    JsonHubProtocol.prototype.assertNotEmptyString = function (value, errorMessage) {\r\n        if (typeof value !== \"string\" || value === \"\") {\r\n            throw new Error(errorMessage);\r\n        }\r\n    };\r\n    return JsonHubProtocol;\r\n}());\r\nexport { JsonHubProtocol };\r\n//# sourceMappingURL=JsonHubProtocol.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n/** A logger that does nothing when log messages are sent to it. */\r\nvar NullLogger = /** @class */ (function () {\r\n    function NullLogger() {\r\n    }\r\n    /** @inheritDoc */\r\n    // tslint:disable-next-line\r\n    NullLogger.prototype.log = function (_logLevel, _message) {\r\n    };\r\n    /** The singleton instance of the {@link @aspnet/signalr.NullLogger}. */\r\n    NullLogger.instance = new NullLogger();\r\n    return NullLogger;\r\n}());\r\nexport { NullLogger };\r\n//# sourceMappingURL=Loggers.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { AbortController } from \"./AbortController\";\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, sendMessage } from \"./Utils\";\r\n// Not exported from 'index', this type is internal.\r\n/** @private */\r\nvar LongPollingTransport = /** @class */ (function () {\r\n    function LongPollingTransport(httpClient, accessTokenFactory, logger, logMessageContent) {\r\n        this.httpClient = httpClient;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logger = logger;\r\n        this.pollAbort = new AbortController();\r\n        this.logMessageContent = logMessageContent;\r\n        this.running = false;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    Object.defineProperty(LongPollingTransport.prototype, \"pollAborted\", {\r\n        // This is an internal type, not exported from 'index' so this is really just internal.\r\n        get: function () {\r\n            return this.pollAbort.aborted;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LongPollingTransport.prototype.connect = function (url, transferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var pollOptions, token, pollUrl, response;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        Arg.isRequired(url, \"url\");\r\n                        Arg.isRequired(transferFormat, \"transferFormat\");\r\n                        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n                        this.url = url;\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting.\");\r\n                        // Allow binary format on Node and Browsers that support binary content (indicated by the presence of responseType property)\r\n                        if (transferFormat === TransferFormat.Binary &&\r\n                            (typeof XMLHttpRequest !== \"undefined\" && typeof new XMLHttpRequest().responseType !== \"string\")) {\r\n                            throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");\r\n                        }\r\n                        pollOptions = {\r\n                            abortSignal: this.pollAbort.signal,\r\n                            headers: {},\r\n                            timeout: 100000,\r\n                        };\r\n                        if (transferFormat === TransferFormat.Binary) {\r\n                            pollOptions.responseType = \"arraybuffer\";\r\n                        }\r\n                        return [4 /*yield*/, this.getAccessToken()];\r\n                    case 1:\r\n                        token = _a.sent();\r\n                        this.updateHeaderToken(pollOptions, token);\r\n                        pollUrl = url + \"&_=\" + Date.now();\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) polling: \" + pollUrl + \".\");\r\n                        return [4 /*yield*/, this.httpClient.get(pollUrl, pollOptions)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        if (response.statusCode !== 200) {\r\n                            this.logger.log(LogLevel.Error, \"(LongPolling transport) Unexpected response code: \" + response.statusCode + \".\");\r\n                            // Mark running as false so that the poll immediately ends and runs the close logic\r\n                            this.closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n                            this.running = false;\r\n                        }\r\n                        else {\r\n                            this.running = true;\r\n                        }\r\n                        this.receiving = this.poll(this.url, pollOptions);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    LongPollingTransport.prototype.getAccessToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.accessTokenFactory) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                    case 2: return [2 /*return*/, null];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    LongPollingTransport.prototype.updateHeaderToken = function (request, token) {\r\n        if (!request.headers) {\r\n            request.headers = {};\r\n        }\r\n        if (token) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            request.headers[\"Authorization\"] = \"Bearer \" + token;\r\n            return;\r\n        }\r\n        // tslint:disable-next-line:no-string-literal\r\n        if (request.headers[\"Authorization\"]) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            delete request.headers[\"Authorization\"];\r\n        }\r\n    };\r\n    LongPollingTransport.prototype.poll = function (url, pollOptions) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var token, pollUrl, response, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, , 8, 9]);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        if (!this.running) return [3 /*break*/, 7];\r\n                        return [4 /*yield*/, this.getAccessToken()];\r\n                    case 2:\r\n                        token = _a.sent();\r\n                        this.updateHeaderToken(pollOptions, token);\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        _a.trys.push([3, 5, , 6]);\r\n                        pollUrl = url + \"&_=\" + Date.now();\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) polling: \" + pollUrl + \".\");\r\n                        return [4 /*yield*/, this.httpClient.get(pollUrl, pollOptions)];\r\n                    case 4:\r\n                        response = _a.sent();\r\n                        if (response.statusCode === 204) {\r\n                            this.logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server.\");\r\n                            this.running = false;\r\n                        }\r\n                        else if (response.statusCode !== 200) {\r\n                            this.logger.log(LogLevel.Error, \"(LongPolling transport) Unexpected response code: \" + response.statusCode + \".\");\r\n                            // Unexpected status code\r\n                            this.closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n                            this.running = false;\r\n                        }\r\n                        else {\r\n                            // Process the response\r\n                            if (response.content) {\r\n                                this.logger.log(LogLevel.Trace, \"(LongPolling transport) data received. \" + getDataDetail(response.content, this.logMessageContent) + \".\");\r\n                                if (this.onreceive) {\r\n                                    this.onreceive(response.content);\r\n                                }\r\n                            }\r\n                            else {\r\n                                // This is another way timeout manifest.\r\n                                this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                            }\r\n                        }\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        e_1 = _a.sent();\r\n                        if (!this.running) {\r\n                            // Log but disregard errors that occur after stopping\r\n                            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll errored after shutdown: \" + e_1.message);\r\n                        }\r\n                        else {\r\n                            if (e_1 instanceof TimeoutError) {\r\n                                // Ignore timeouts and reissue the poll.\r\n                                this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                            }\r\n                            else {\r\n                                // Close the connection with the error as the result.\r\n                                this.closeError = e_1;\r\n                                this.running = false;\r\n                            }\r\n                        }\r\n                        return [3 /*break*/, 6];\r\n                    case 6: return [3 /*break*/, 1];\r\n                    case 7: return [3 /*break*/, 9];\r\n                    case 8:\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Polling complete.\");\r\n                        // We will reach here with pollAborted==false when the server returned a response causing the transport to stop.\r\n                        // If pollAborted==true then client initiated the stop and the stop method will raise the close event after DELETE is sent.\r\n                        if (!this.pollAborted) {\r\n                            this.raiseOnClose();\r\n                        }\r\n                        return [7 /*endfinally*/];\r\n                    case 9: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    LongPollingTransport.prototype.send = function (data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!this.running) {\r\n                    return [2 /*return*/, Promise.reject(new Error(\"Cannot send until the transport is connected\"))];\r\n                }\r\n                return [2 /*return*/, sendMessage(this.logger, \"LongPolling\", this.httpClient, this.url, this.accessTokenFactory, data, this.logMessageContent)];\r\n            });\r\n        });\r\n    };\r\n    LongPollingTransport.prototype.stop = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var deleteOptions, token;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Stopping polling.\");\r\n                        // Tell receiving loop to stop, abort any current request, and then wait for it to finish\r\n                        this.running = false;\r\n                        this.pollAbort.abort();\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, , 5, 6]);\r\n                        return [4 /*yield*/, this.receiving];\r\n                    case 2:\r\n                        _a.sent();\r\n                        // Send DELETE to clean up long polling on the server\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) sending DELETE request to \" + this.url + \".\");\r\n                        deleteOptions = {\r\n                            headers: {},\r\n                        };\r\n                        return [4 /*yield*/, this.getAccessToken()];\r\n                    case 3:\r\n                        token = _a.sent();\r\n                        this.updateHeaderToken(deleteOptions, token);\r\n                        return [4 /*yield*/, this.httpClient.delete(this.url, deleteOptions)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request sent.\");\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Stop finished.\");\r\n                        // Raise close event here instead of in polling\r\n                        // It needs to happen after the DELETE request is sent\r\n                        this.raiseOnClose();\r\n                        return [7 /*endfinally*/];\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    LongPollingTransport.prototype.raiseOnClose = function () {\r\n        if (this.onclose) {\r\n            var logMessage = \"(LongPolling transport) Firing onclose event.\";\r\n            if (this.closeError) {\r\n                logMessage += \" Error: \" + this.closeError;\r\n            }\r\n            this.logger.log(LogLevel.Trace, logMessage);\r\n            this.onclose(this.closeError);\r\n        }\r\n    };\r\n    return LongPollingTransport;\r\n}());\r\nexport { LongPollingTransport };\r\n//# sourceMappingURL=LongPollingTransport.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, sendMessage } from \"./Utils\";\r\n/** @private */\r\nvar ServerSentEventsTransport = /** @class */ (function () {\r\n    function ServerSentEventsTransport(httpClient, accessTokenFactory, logger, logMessageContent, eventSourceConstructor) {\r\n        this.httpClient = httpClient;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logger = logger;\r\n        this.logMessageContent = logMessageContent;\r\n        this.eventSourceConstructor = eventSourceConstructor;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    ServerSentEventsTransport.prototype.connect = function (url, transferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var token;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        Arg.isRequired(url, \"url\");\r\n                        Arg.isRequired(transferFormat, \"transferFormat\");\r\n                        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n                        this.logger.log(LogLevel.Trace, \"(SSE transport) Connecting.\");\r\n                        // set url before accessTokenFactory because this.url is only for send and we set the auth header instead of the query string for send\r\n                        this.url = url;\r\n                        if (!this.accessTokenFactory) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1:\r\n                        token = _a.sent();\r\n                        if (token) {\r\n                            url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + (\"access_token=\" + encodeURIComponent(token));\r\n                        }\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                            var opened = false;\r\n                            if (transferFormat !== TransferFormat.Text) {\r\n                                reject(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"));\r\n                                return;\r\n                            }\r\n                            var eventSource;\r\n                            if (typeof window !== \"undefined\") {\r\n                                eventSource = new _this.eventSourceConstructor(url, { withCredentials: true });\r\n                            }\r\n                            else {\r\n                                // Non-browser passes cookies via the dictionary\r\n                                var cookies = _this.httpClient.getCookieString(url);\r\n                                eventSource = new _this.eventSourceConstructor(url, { withCredentials: true, headers: { Cookie: cookies } });\r\n                            }\r\n                            try {\r\n                                eventSource.onmessage = function (e) {\r\n                                    if (_this.onreceive) {\r\n                                        try {\r\n                                            _this.logger.log(LogLevel.Trace, \"(SSE transport) data received. \" + getDataDetail(e.data, _this.logMessageContent) + \".\");\r\n                                            _this.onreceive(e.data);\r\n                                        }\r\n                                        catch (error) {\r\n                                            _this.close(error);\r\n                                            return;\r\n                                        }\r\n                                    }\r\n                                };\r\n                                eventSource.onerror = function (e) {\r\n                                    var error = new Error(e.data || \"Error occurred\");\r\n                                    if (opened) {\r\n                                        _this.close(error);\r\n                                    }\r\n                                    else {\r\n                                        reject(error);\r\n                                    }\r\n                                };\r\n                                eventSource.onopen = function () {\r\n                                    _this.logger.log(LogLevel.Information, \"SSE connected to \" + _this.url);\r\n                                    _this.eventSource = eventSource;\r\n                                    opened = true;\r\n                                    resolve();\r\n                                };\r\n                            }\r\n                            catch (e) {\r\n                                reject(e);\r\n                                return;\r\n                            }\r\n                        })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ServerSentEventsTransport.prototype.send = function (data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!this.eventSource) {\r\n                    return [2 /*return*/, Promise.reject(new Error(\"Cannot send until the transport is connected\"))];\r\n                }\r\n                return [2 /*return*/, sendMessage(this.logger, \"SSE\", this.httpClient, this.url, this.accessTokenFactory, data, this.logMessageContent)];\r\n            });\r\n        });\r\n    };\r\n    ServerSentEventsTransport.prototype.stop = function () {\r\n        this.close();\r\n        return Promise.resolve();\r\n    };\r\n    ServerSentEventsTransport.prototype.close = function (e) {\r\n        if (this.eventSource) {\r\n            this.eventSource.close();\r\n            this.eventSource = undefined;\r\n            if (this.onclose) {\r\n                this.onclose(e);\r\n            }\r\n        }\r\n    };\r\n    return ServerSentEventsTransport;\r\n}());\r\nexport { ServerSentEventsTransport };\r\n//# sourceMappingURL=ServerSentEventsTransport.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// Not exported from index\r\n/** @private */\r\nvar TextMessageFormat = /** @class */ (function () {\r\n    function TextMessageFormat() {\r\n    }\r\n    TextMessageFormat.write = function (output) {\r\n        return \"\" + output + TextMessageFormat.RecordSeparator;\r\n    };\r\n    TextMessageFormat.parse = function (input) {\r\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\r\n            throw new Error(\"Message is incomplete.\");\r\n        }\r\n        var messages = input.split(TextMessageFormat.RecordSeparator);\r\n        messages.pop();\r\n        return messages;\r\n    };\r\n    TextMessageFormat.RecordSeparatorCode = 0x1e;\r\n    TextMessageFormat.RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\r\n    return TextMessageFormat;\r\n}());\r\nexport { TextMessageFormat };\r\n//# sourceMappingURL=TextMessageFormat.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\n/** @private */\r\nvar Arg = /** @class */ (function () {\r\n    function Arg() {\r\n    }\r\n    Arg.isRequired = function (val, name) {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(\"The '\" + name + \"' argument is required.\");\r\n        }\r\n    };\r\n    Arg.isIn = function (val, values, name) {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(\"Unknown \" + name + \" value: \" + val + \".\");\r\n        }\r\n    };\r\n    return Arg;\r\n}());\r\nexport { Arg };\r\n/** @private */\r\nexport function getDataDetail(data, includeContent) {\r\n    var detail = \"\";\r\n    if (isArrayBuffer(data)) {\r\n        detail = \"Binary data of length \" + data.byteLength;\r\n        if (includeContent) {\r\n            detail += \". Content: '\" + formatArrayBuffer(data) + \"'\";\r\n        }\r\n    }\r\n    else if (typeof data === \"string\") {\r\n        detail = \"String data of length \" + data.length;\r\n        if (includeContent) {\r\n            detail += \". Content: '\" + data + \"'\";\r\n        }\r\n    }\r\n    return detail;\r\n}\r\n/** @private */\r\nexport function formatArrayBuffer(data) {\r\n    var view = new Uint8Array(data);\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    var str = \"\";\r\n    view.forEach(function (num) {\r\n        var pad = num < 16 ? \"0\" : \"\";\r\n        str += \"0x\" + pad + num.toString(16) + \" \";\r\n    });\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\n// Also in signalr-protocol-msgpack/Utils.ts\r\n/** @private */\r\nexport function isArrayBuffer(val) {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\n/** @private */\r\nexport function sendMessage(logger, transportName, httpClient, url, accessTokenFactory, content, logMessageContent) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var _a, headers, token, responseType, response;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    if (!accessTokenFactory) return [3 /*break*/, 2];\r\n                    return [4 /*yield*/, accessTokenFactory()];\r\n                case 1:\r\n                    token = _b.sent();\r\n                    if (token) {\r\n                        headers = (_a = {},\r\n                            _a[\"Authorization\"] = \"Bearer \" + token,\r\n                            _a);\r\n                    }\r\n                    _b.label = 2;\r\n                case 2:\r\n                    logger.log(LogLevel.Trace, \"(\" + transportName + \" transport) sending data. \" + getDataDetail(content, logMessageContent) + \".\");\r\n                    responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\r\n                    return [4 /*yield*/, httpClient.post(url, {\r\n                            content: content,\r\n                            headers: headers,\r\n                            responseType: responseType,\r\n                        })];\r\n                case 3:\r\n                    response = _b.sent();\r\n                    logger.log(LogLevel.Trace, \"(\" + transportName + \" transport) request complete. Response status: \" + response.statusCode + \".\");\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/** @private */\r\nexport function createLogger(logger) {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n    if (logger.log) {\r\n        return logger;\r\n    }\r\n    return new ConsoleLogger(logger);\r\n}\r\n/** @private */\r\nvar Subject = /** @class */ (function () {\r\n    function Subject(cancelCallback) {\r\n        this.observers = [];\r\n        this.cancelCallback = cancelCallback;\r\n    }\r\n    Subject.prototype.next = function (item) {\r\n        for (var _i = 0, _a = this.observers; _i < _a.length; _i++) {\r\n            var observer = _a[_i];\r\n            observer.next(item);\r\n        }\r\n    };\r\n    Subject.prototype.error = function (err) {\r\n        for (var _i = 0, _a = this.observers; _i < _a.length; _i++) {\r\n            var observer = _a[_i];\r\n            if (observer.error) {\r\n                observer.error(err);\r\n            }\r\n        }\r\n    };\r\n    Subject.prototype.complete = function () {\r\n        for (var _i = 0, _a = this.observers; _i < _a.length; _i++) {\r\n            var observer = _a[_i];\r\n            if (observer.complete) {\r\n                observer.complete();\r\n            }\r\n        }\r\n    };\r\n    Subject.prototype.subscribe = function (observer) {\r\n        this.observers.push(observer);\r\n        return new SubjectSubscription(this, observer);\r\n    };\r\n    return Subject;\r\n}());\r\nexport { Subject };\r\n/** @private */\r\nvar SubjectSubscription = /** @class */ (function () {\r\n    function SubjectSubscription(subject, observer) {\r\n        this.subject = subject;\r\n        this.observer = observer;\r\n    }\r\n    SubjectSubscription.prototype.dispose = function () {\r\n        var index = this.subject.observers.indexOf(this.observer);\r\n        if (index > -1) {\r\n            this.subject.observers.splice(index, 1);\r\n        }\r\n        if (this.subject.observers.length === 0) {\r\n            this.subject.cancelCallback().catch(function (_) { });\r\n        }\r\n    };\r\n    return SubjectSubscription;\r\n}());\r\nexport { SubjectSubscription };\r\n/** @private */\r\nvar ConsoleLogger = /** @class */ (function () {\r\n    function ConsoleLogger(minimumLogLevel) {\r\n        this.minimumLogLevel = minimumLogLevel;\r\n    }\r\n    ConsoleLogger.prototype.log = function (logLevel, message) {\r\n        if (logLevel >= this.minimumLogLevel) {\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    console.error(\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \": \" + message);\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    console.warn(\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \": \" + message);\r\n                    break;\r\n                case LogLevel.Information:\r\n                    console.info(\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \": \" + message);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    console.log(\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \": \" + message);\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    return ConsoleLogger;\r\n}());\r\nexport { ConsoleLogger };\r\n//# sourceMappingURL=Utils.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail } from \"./Utils\";\r\n/** @private */\r\nvar WebSocketTransport = /** @class */ (function () {\r\n    function WebSocketTransport(httpClient, accessTokenFactory, logger, logMessageContent, webSocketConstructor) {\r\n        this.logger = logger;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logMessageContent = logMessageContent;\r\n        this.webSocketConstructor = webSocketConstructor;\r\n        this.httpClient = httpClient;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    WebSocketTransport.prototype.connect = function (url, transferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var token;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        Arg.isRequired(url, \"url\");\r\n                        Arg.isRequired(transferFormat, \"transferFormat\");\r\n                        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n                        this.logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting.\");\r\n                        if (!this.accessTokenFactory) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1:\r\n                        token = _a.sent();\r\n                        if (token) {\r\n                            url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + (\"access_token=\" + encodeURIComponent(token));\r\n                        }\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                            url = url.replace(/^http/, \"ws\");\r\n                            var webSocket;\r\n                            var cookies = _this.httpClient.getCookieString(url);\r\n                            if (typeof window === \"undefined\" && cookies) {\r\n                                // Only pass cookies when in non-browser environments\r\n                                webSocket = new _this.webSocketConstructor(url, undefined, {\r\n                                    headers: {\r\n                                        Cookie: \"\" + cookies,\r\n                                    },\r\n                                });\r\n                            }\r\n                            if (!webSocket) {\r\n                                // Chrome is not happy with passing 'undefined' as protocol\r\n                                webSocket = new _this.webSocketConstructor(url);\r\n                            }\r\n                            if (transferFormat === TransferFormat.Binary) {\r\n                                webSocket.binaryType = \"arraybuffer\";\r\n                            }\r\n                            // tslint:disable-next-line:variable-name\r\n                            webSocket.onopen = function (_event) {\r\n                                _this.logger.log(LogLevel.Information, \"WebSocket connected to \" + url + \".\");\r\n                                _this.webSocket = webSocket;\r\n                                resolve();\r\n                            };\r\n                            webSocket.onerror = function (event) {\r\n                                var error = null;\r\n                                // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                                if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                                    error = event.error;\r\n                                }\r\n                                reject(error);\r\n                            };\r\n                            webSocket.onmessage = function (message) {\r\n                                _this.logger.log(LogLevel.Trace, \"(WebSockets transport) data received. \" + getDataDetail(message.data, _this.logMessageContent) + \".\");\r\n                                if (_this.onreceive) {\r\n                                    _this.onreceive(message.data);\r\n                                }\r\n                            };\r\n                            webSocket.onclose = function (event) { return _this.close(event); };\r\n                        })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WebSocketTransport.prototype.send = function (data) {\r\n        if (this.webSocket && this.webSocket.readyState === this.webSocketConstructor.OPEN) {\r\n            this.logger.log(LogLevel.Trace, \"(WebSockets transport) sending data. \" + getDataDetail(data, this.logMessageContent) + \".\");\r\n            this.webSocket.send(data);\r\n            return Promise.resolve();\r\n        }\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    };\r\n    WebSocketTransport.prototype.stop = function () {\r\n        if (this.webSocket) {\r\n            // Clear websocket handlers because we are considering the socket closed now\r\n            this.webSocket.onclose = function () { };\r\n            this.webSocket.onmessage = function () { };\r\n            this.webSocket.onerror = function () { };\r\n            this.webSocket.close();\r\n            this.webSocket = undefined;\r\n            // Manually invoke onclose callback inline so we know the HttpConnection was closed properly before returning\r\n            // This also solves an issue where websocket.onclose could take 18+ seconds to trigger during network disconnects\r\n            this.close(undefined);\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    WebSocketTransport.prototype.close = function (event) {\r\n        // webSocket will be null if the transport did not start successfully\r\n        this.logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\r\n        if (this.onclose) {\r\n            if (event && (event.wasClean === false || event.code !== 1000)) {\r\n                this.onclose(new Error(\"WebSocket closed with status code: \" + event.code + \" (\" + event.reason + \").\"));\r\n            }\r\n            else {\r\n                this.onclose();\r\n            }\r\n        }\r\n    };\r\n    return WebSocketTransport;\r\n}());\r\nexport { WebSocketTransport };\r\n//# sourceMappingURL=WebSocketTransport.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nvar XhrHttpClient = /** @class */ (function (_super) {\r\n    __extends(XhrHttpClient, _super);\r\n    function XhrHttpClient(logger) {\r\n        var _this = _super.call(this) || this;\r\n        _this.logger = logger;\r\n        return _this;\r\n    }\r\n    /** @inheritDoc */\r\n    XhrHttpClient.prototype.send = function (request) {\r\n        var _this = this;\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open(request.method, request.url, true);\r\n            xhr.withCredentials = true;\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n            var headers = request.headers;\r\n            if (headers) {\r\n                Object.keys(headers)\r\n                    .forEach(function (header) {\r\n                    xhr.setRequestHeader(header, headers[header]);\r\n                });\r\n            }\r\n            if (request.responseType) {\r\n                xhr.responseType = request.responseType;\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = function () {\r\n                    xhr.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n            if (request.timeout) {\r\n                xhr.timeout = request.timeout;\r\n            }\r\n            xhr.onload = function () {\r\n                if (request.abortSignal) {\r\n                    request.abortSignal.onabort = null;\r\n                }\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\r\n                }\r\n                else {\r\n                    reject(new HttpError(xhr.statusText, xhr.status));\r\n                }\r\n            };\r\n            xhr.onerror = function () {\r\n                _this.logger.log(LogLevel.Warning, \"Error from HTTP request. \" + xhr.status + \": \" + xhr.statusText + \".\");\r\n                reject(new HttpError(xhr.statusText, xhr.status));\r\n            };\r\n            xhr.ontimeout = function () {\r\n                _this.logger.log(LogLevel.Warning, \"Timeout from HTTP request.\");\r\n                reject(new TimeoutError());\r\n            };\r\n            xhr.send(request.content || \"\");\r\n        });\r\n    };\r\n    return XhrHttpClient;\r\n}(HttpClient));\r\nexport { XhrHttpClient };\r\n//# sourceMappingURL=XhrHttpClient.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// Version token that will be replaced by the prepack command\r\n/** The version of the SignalR client. */\r\nexport var VERSION = \"1.1.2\";\r\nexport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nexport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nexport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nexport { HubConnection, HubConnectionState } from \"./HubConnection\";\r\nexport { HubConnectionBuilder } from \"./HubConnectionBuilder\";\r\nexport { MessageType } from \"./IHubProtocol\";\r\nexport { LogLevel } from \"./ILogger\";\r\nexport { HttpTransportType, TransferFormat } from \"./ITransport\";\r\nexport { NullLogger } from \"./Loggers\";\r\nexport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\n//# sourceMappingURL=index.js.map","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { AlertaPage } from './alerta.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule\n    ],\n  declarations: [AlertaPage]\n})\nexport class AlertaPageModule {}","module.exports = \"<ion-content padding>\\n\\n  <h2 text-center>Nuevo Pedido</h2>\\n\\n  <div class=\\\"loadingContent\\\">\\n    <div class=\\\"loading\\\">\\n\\n    </div>\\n    <h3 class=\\\"contador\\\">{{contador}}</h3>\\n\\n\\n  </div>\\n\\n  <div class=\\\"botones\\\">\\n    <ion-button fill=\\\"outline\\\" (click)=\\\"rechazar()\\\">Rechazar </ion-button>\\n    <ion-button fill=\\\"outline\\\" (click)=\\\"aceptar()\\\">Aceptar </ion-button>\\n\\n  </div>\\n\\n\\n</ion-content>\\n\"","module.exports = \".loadingContent {\\n  position: relative; }\\n\\n.loading {\\n  border-radius: 50%;\\n  border: 5px solid;\\n  border-color: #ee5a5a transparent #ee5a5a transparent;\\n  width: 170px;\\n  height: 170px;\\n  margin: 0 auto;\\n  -webkit-animation: loading 1s linear infinite;\\n          animation: loading 1s linear infinite;\\n  margin-top: 30px; }\\n\\n.contador {\\n  position: absolute;\\n  bottom: 35%;\\n  left: 0;\\n  right: 0;\\n  margin: 0 auto;\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  font-size: 2.7rem; }\\n\\n.botones {\\n  display: flex;\\n  justify-content: space-between;\\n  position: absolute;\\n  bottom: 3%;\\n  width: 85%;\\n  right: 0;\\n  left: 0;\\n  margin: 0 auto; }\\n\\n@-webkit-keyframes loading {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg); }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n            transform: rotate(360deg); } }\\n\\n@keyframes loading {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg); }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n            transform: rotate(360deg); } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sZXhzb2Z0d2FyZS9EZXNrdG9wL0VzdG9yL3JlcGFydGlkb3IvcmVwYXJ0aWRvckVzdG9yL3NyYy9hcHAvcGFnZXMvYWxlcnRhL2FsZXJ0YS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBa0IsRUFBQTs7QUFFdEI7RUFDSSxrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLHFEQUFxRDtFQUNyRCxZQUFZO0VBQ1osYUFBYTtFQUNiLGNBQWM7RUFDZCw2Q0FBcUM7VUFBckMscUNBQXFDO0VBQ3JDLGdCQUFnQixFQUFBOztBQUlwQjtFQUNJLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsT0FBTztFQUNQLFFBQVE7RUFDUixjQUFjO0VBQ2QsMEJBQWtCO0VBQWxCLHVCQUFrQjtFQUFsQixrQkFBa0I7RUFDbEIsaUJBQWlCLEVBQUE7O0FBR3JCO0VBQ0ksYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLFVBQVU7RUFDVixRQUFRO0VBQ1IsT0FBTztFQUNQLGNBQWMsRUFBQTs7QUFHbEI7RUFDSTtJQUNFLCtCQUF1QjtZQUF2Qix1QkFBdUIsRUFBQTtFQUV6QjtJQUNFLGlDQUF5QjtZQUF6Qix5QkFBeUIsRUFBQSxFQUFBOztBQUwvQjtFQUNJO0lBQ0UsK0JBQXVCO1lBQXZCLHVCQUF1QixFQUFBO0VBRXpCO0lBQ0UsaUNBQXlCO1lBQXpCLHlCQUF5QixFQUFBLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hbGVydGEvYWxlcnRhLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5sb2FkaW5nQ29udGVudHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4ubG9hZGluZ3tcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgYm9yZGVyOiA1cHggc29saWQ7XG4gICAgYm9yZGVyLWNvbG9yOiAjZWU1YTVhIHRyYW5zcGFyZW50ICNlZTVhNWEgdHJhbnNwYXJlbnQ7XG4gICAgd2lkdGg6IDE3MHB4O1xuICAgIGhlaWdodDogMTcwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgYW5pbWF0aW9uOiBsb2FkaW5nIDFzIGxpbmVhciBpbmZpbml0ZTtcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xuXG59XG5cbi5jb250YWRvcntcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAzNSU7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gICAgZm9udC1zaXplOiAyLjdyZW07XG59XG5cbi5ib3RvbmVze1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDMlO1xuICAgIHdpZHRoOiA4NSU7XG4gICAgcmlnaHQ6IDA7XG4gICAgbGVmdDogMDtcbiAgICBtYXJnaW46IDAgYXV0bztcbn1cblxuQGtleWZyYW1lcyBsb2FkaW5nIHtcbiAgICAwJSB7XG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgICB9XG4gICAgMTAwJSB7XG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xuICAgIH1cbiAgfVxuICAiXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-alerta',\n  templateUrl: './alerta.page.html',\n  styleUrls: ['./alerta.page.scss'],\n})\nexport class AlertaPage implements OnInit {\n\n  contador = 60;\n  intervalo:any;\n\n  constructor(public modalController: ModalController) { }\n\n  ngOnInit() {\n\n    this.intervalo = setInterval(()=>{\n      this.contador = this.contador - 1;\n      if(this.contador <= 0){\n        clearInterval(this.intervalo);\n        this.modalController.dismiss(false);      \n      }\n    },1000);\n          \n  }\n\n  rechazar(){\n    this.modalController.dismiss(false);\n  }\n\n  aceptar(){\n    this.modalController.dismiss(true);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { HomePage } from './home.page';\nimport { AlertaPage } from '../alerta/alerta.page';\nimport { AlertaPageModule } from '../alerta/alerta.module';\nimport { InfoPedidoPage } from '../info-pedido/info-pedido.page';\nimport { InfoPedidoPageModule } from '../info-pedido/info-pedido.module';\n\n@NgModule({\n  entryComponents: [\n    InfoPedidoPage,\n    AlertaPage\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    InfoPedidoPageModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomePage\n      }\n    ]),\n    AlertaPageModule\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}","module.exports = \"<!--Se removio el header para mejora de diseño-->\\n<ion-content>\\n  <div id=\\\"map\\\"></div>\\n  <ion-button class=\\\"center\\\" mode=\\\"md\\\" color=\\\"light\\\" (click)=\\\"centrar()\\\">\\n    <ion-icon class=\\\"center-icono\\\" slot=\\\"icon-only\\\" mode=\\\"md\\\" name=\\\"locate\\\"></ion-icon>\\n  </ion-button>  \\n\\n  <div id=\\\"icon\\\">\\n      <ion-button  mode=\\\"md\\\" class=\\\"menu\\\" (click)=\\\"toggleSideMenu()\\\" color=\\\"light\\\">\\n          <ion-icon class=\\\"center-icono\\\" slot=\\\"icon-only\\\" name=\\\"menu\\\"></ion-icon>\\n        </ion-button>  \\n    <ion-badge *ngIf=\\\"notifications>0\\\" color=\\\"danger\\\"\\n      style=\\\"position: absolute; top:-2vw; right: -4vw; --padding-start:5px; --padding-end:5px;\\\">{{notifications}}\\n    </ion-badge>\\n  </div>\\n  <div id=\\\"logo\\\" (click)=\\\"newPedido()\\\">\\n    <img src=\\\"assets/ElEstorLogoCuadroyAza.png\\\" style=\\\"width: 45vw;\\\">\\n  </div>\\n  <div id=\\\"btnGroup\\\"\\n    style=\\\"background-color:#fff; margin-top:3vw; border:1px solid #ccc; border-radius:6px; margin-right:3vw; width:9vw; height:18vw;\\\">\\n    <div style=\\\"width: 100%; height: 50%; text-align:center;\\\">\\n      <!--<img src=\\\"assets/menu.png\\\" style=\\\"width:70%; height:70%;\\\">-->\\n      <ion-icon [ngClass]=\\\"{disabled:helpDisabled}\\\" name=\\\"help-circle-outline\\\" style=\\\"width: 80%; height: 80%;\\\"\\n        color=\\\"primary\\\" (click)=\\\"Help()\\\"></ion-icon>\\n    </div>\\n    <div style=\\\"width:100%; height:50%; border-top:1px solid #ccc;\\\">\\n    </div>\\n  </div>\\n</ion-content>\\n\\n<div class=\\\"footer\\\">\\n  <h2 *ngIf=\\\"estado==1 && ruta==false\\\" class=\\\"negocio\\\">Toks</h2>\\n  <p class=\\\"negDir\\\" *ngIf=\\\"estado==1 && ruta==false\\\">Blvd. Villas de Irapuato #1443, Int. A-31</p>\\n  <h2 *ngIf=\\\"estado==2\\\" class=\\\"negocio\\\">Jesus Adrian Quiroz Palacios</h2>\\n  <p class=\\\"negDir\\\" *ngIf=\\\"estado==2\\\">Paseo de la Fundacion 3314, Villas de Irapuato</p>   \\n  <ion-button (click)=\\\"directionCliente()\\\" *ngIf=\\\"ruta\\\" class=\\\"botonRecibi\\\" shape=\\\"round\\\">Recibi el pedido</ion-button>\\n  <ion-button (click)=\\\"finalizarPedido()\\\" *ngIf=\\\"rutaCliente\\\" class=\\\"botonRecibi\\\" shape=\\\"round\\\">Deje el pedido</ion-button>\\n  <ion-button color=\\\"ligth\\\" mode=\\\"md\\\" class=\\\"info\\\" (click)=\\\"infoPedido()\\\">\\n    <ion-icon class=\\\"icono-info\\\" mode=\\\"ios\\\" slot=\\\"icon-only\\\" name=\\\"list\\\"></ion-icon>\\n  </ion-button>  \\n\\n</div>\\n\\n<!--Se comento el footer para integrar la parte de boton recibido y entraga de pedido-->\\n\\n<!-- <ion-footer>\\n  <ion-toolbar>\\n    <ion-searchbar placeholder=\\\"Search for a place or address\\\"></ion-searchbar>\\n  </ion-toolbar>\\n</ion-footer> -->\"","module.exports = \"#map {\\n  height: 100%;\\n  width: 100%; }\\n\\n#icon {\\n  margin-top: 5vw;\\n  margin-left: 5vw; }\\n\\n.disabled {\\n  color: gray;\\n  pointer-events: none; }\\n\\n.menu {\\n  --padding-start: 0;\\n  --padding-end: 0;\\n  width: 45px;\\n  height: 45px; }\\n\\n.center {\\n  position: absolute;\\n  bottom: 10%;\\n  right: 2%;\\n  --border-radius: 50%;\\n  width: 65px;\\n  height: 65px; }\\n\\n.center-icono {\\n  width: 35px;\\n  height: 35px; }\\n\\n.footer {\\n  position: absolute;\\n  bottom: 0;\\n  background-color: white;\\n  width: 100%;\\n  height: 10%;\\n  padding: 10px 55px 0 10px; }\\n\\n.botonRecibi {\\n  margin: 0 auto;\\n  width: 80%;\\n  display: block;\\n  margin-top: 3%; }\\n\\n.info {\\n  margin: 0 auto;\\n  color: black;\\n  position: absolute;\\n  right: 3%;\\n  --box-shadow: none;\\n  --padding-start: 0;\\n  --padding-end: 0;\\n  top: 26px; }\\n\\n.icono-info {\\n  width: 38px;\\n  height: 38px; }\\n\\n.negocio {\\n  margin: 0;\\n  text-align: center; }\\n\\n.dirNeg {\\n  text-align: center;\\n  margin: 10px 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sZXhzb2Z0d2FyZS9EZXNrdG9wL0VzdG9yL3JlcGFydGlkb3IvcmVwYXJ0aWRvckVzdG9yL3NyYy9hcHAvcGFnZXMvaG9tZS9ob21lLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQVk7RUFDWixXQUFXLEVBQUE7O0FBR2Y7RUFDSSxlQUFlO0VBQ2YsZ0JBQWdCLEVBQUE7O0FBR3BCO0VBQ0ksV0FBVTtFQUNWLG9CQUFvQixFQUFBOztBQUd4QjtFQUNJLGtCQUFnQjtFQUNoQixnQkFBYztFQUNkLFdBQVc7RUFDWCxZQUFZLEVBQUE7O0FBR2hCO0VBQ0ksa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxTQUFTO0VBQ1Qsb0JBQWdCO0VBQ2hCLFdBQVc7RUFDWCxZQUFZLEVBQUE7O0FBR2hCO0VBQ0ksV0FBVztFQUNYLFlBQVksRUFBQTs7QUFHaEI7RUFDSSxrQkFBa0I7RUFDbEIsU0FBUztFQUNULHVCQUF1QjtFQUN2QixXQUFXO0VBQ1gsV0FBVztFQUNYLHlCQUF5QixFQUFBOztBQUc3QjtFQUNJLGNBQWM7RUFDZCxVQUFVO0VBQ1YsY0FBYztFQUNkLGNBQWMsRUFBQTs7QUFHbEI7RUFDSSxjQUFjO0VBQ2QsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixTQUFTO0VBQ1Qsa0JBQWE7RUFDYixrQkFBZ0I7RUFDaEIsZ0JBQWM7RUFDZCxTQUFTLEVBQUE7O0FBR2I7RUFDSSxXQUFXO0VBQ1gsWUFBWSxFQUFBOztBQUdoQjtFQUNJLFNBQVM7RUFDVCxrQkFBa0IsRUFBQTs7QUFHdEI7RUFDSSxrQkFBa0I7RUFDbEIsY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvaG9tZS9ob21lLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNtYXB7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG4jaWNvbntcbiAgICBtYXJnaW4tdG9wOiA1dnc7XG4gICAgbWFyZ2luLWxlZnQ6IDV2dztcbn1cblxuLmRpc2FibGVke1xuICAgIGNvbG9yOmdyYXk7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG5cbi5tZW51e1xuICAgIC0tcGFkZGluZy1zdGFydDogMDtcbiAgICAtLXBhZGRpbmctZW5kOiAwO1xuICAgIHdpZHRoOiA0NXB4O1xuICAgIGhlaWdodDogNDVweDtcbn1cblxuLmNlbnRlcntcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAxMCU7XG4gICAgcmlnaHQ6IDIlO1xuICAgIC0tYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIHdpZHRoOiA2NXB4O1xuICAgIGhlaWdodDogNjVweDtcbn1cblxuLmNlbnRlci1pY29ub3tcbiAgICB3aWR0aDogMzVweDtcbiAgICBoZWlnaHQ6IDM1cHg7XG59XG5cbi5mb290ZXJ7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwJTtcbiAgICBwYWRkaW5nOiAxMHB4IDU1cHggMCAxMHB4O1xufVxuXG4uYm90b25SZWNpYml7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgd2lkdGg6IDgwJTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tdG9wOiAzJTtcbn1cblxuLmluZm97XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgY29sb3I6IGJsYWNrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogMyU7XG4gICAgLS1ib3gtc2hhZG93OiBub25lO1xuICAgIC0tcGFkZGluZy1zdGFydDogMDtcbiAgICAtLXBhZGRpbmctZW5kOiAwO1xuICAgIHRvcDogMjZweDtcbn1cblxuLmljb25vLWluZm97XG4gICAgd2lkdGg6IDM4cHg7XG4gICAgaGVpZ2h0OiAzOHB4O1xufVxuXG4ubmVnb2Npb3tcbiAgICBtYXJnaW46IDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uZGlyTmVne1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW46IDEwcHggMDtcbn1cblxuXG4iXX0= */\"","import { Component, OnInit, destroyPlatform } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { MenuController, NavController, Events, AlertController, ModalController } from '@ionic/angular';\nimport { UserService } from '../../services/user/user.service';\nimport { FuncionesGlobalesService } from '../../services/global/funciones-globales.service';\nimport { HomeService } from '../../services/homeService/home.service';\nimport { interval, Subject } from 'rxjs';\nimport { SignalRService } from '../../services/signalr/signal-r.service';\nimport { user } from '../../../interfaces/user.interface';\nimport { async } from 'q';\nimport { validateConfig } from '@angular/router/src/config';\nimport { userInfo } from 'os';\nimport { order } from '../../../interfaces/order.interface';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { AlertaPage } from '../alerta/alerta.page';\nimport { InfoPedidoPage } from '../info-pedido/info-pedido.page';\n\n\ndeclare var google;\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage implements OnInit {\n\n  mapa: any = null;\n  pedido:any;\n  id: any;\n  myMarker: any;\n  notifications: number = 0;\n  deliverMarkers = [];\n  delivers = [];\n  repartidoresMarkers = {};\n  alertOfProblem: any;\n  HelpMarker: any;\n  currentPosition = { lat: 0, lng: 0 };\n  marketPosition = { lat: 0, lng: 0};\n  clientPosition = {lat : 0, lng: 0};\n  currentPosition2: Subject<object> = new Subject<object>();\n  rechazoAlerta = false;\n  helpDisabled: boolean = false;\n  directionsDisplay:any;\n  repartidorSubscribe:any;\n  pedidosSuscribe:any;\n  ruta:boolean = false;\n  rumboCliente:boolean = false;\n  rutaCliente:boolean = false; \n  estado:number = 0;\n\n  constructor(private storage: Storage,\n    private afdb: AngularFireDatabase,\n    private homeSevice: HomeService,\n    private globalFunctions: FuncionesGlobalesService,\n    public signalRService: SignalRService,\n    private geolocation: Geolocation,\n    private menu: MenuController,\n    private userService: UserService,\n    public events: Events,\n    public alertController: AlertController,\n    private modalCtrl: ModalController,\n    public modalController: ModalController) {\n    this.menu.enable(true, 'menu');\n  }\n\n  //evento que ocurre cuando se hace click en boton ayuda\n  // Help() {\n  //   this.Show_Help_Alert();\n  // }\n\n  finalizarPedido(){\n    console.log(\"finalizar pedido\");\n    this.rumboCliente = false;\n    this.rutaCliente = false;\n    this.estado = 0;\n    this.ruta = false;\n    this.directionsDisplay.setMap(null);\n  }\n\n  async infoPedido(){\n      const modal = await this.modalController.create({\n        component: InfoPedidoPage,\n        componentProps: this.pedido \n      });\n      \n      modal.present();\n    \n  }\n  \n\n  async newPedido(){\n    const modal =  await this.modalCtrl.create({\n      component: AlertaPage,\n      cssClass: \"alertaModal\",\n      backdropDismiss: false\n\n    });\n\n    modal.present();\n\n    let aceptado = await modal.onDidDismiss();\n    if(aceptado.data){\n      this.marketPosition.lat = parseFloat(this.pedido.productos[0].latitud);\n      this.marketPosition.lng = parseFloat(this.pedido.productos[0].longitud);\n\n      this.clientPosition.lat = this.pedido['ubicacionCliente'][0]['lat'];\n      this.clientPosition.lng = this.pedido['ubicacionCliente'][0]['lng'];\n\n      this.repartidoresUnsubscribe();\n\n      this.pedidosSuscribe.unsubscribe();\n\n      this.estado = 1;\n\n      this.direction();\n\n      console.log(this.pedido);\n    \n    }\n    else{\n      this.pedido = undefined;\n    }\n\n    \n  }\n\n  direction(){\n    let directionsService = new google.maps.DirectionsService;\n    directionsService.route({\n      origin: this.currentPosition,\n      destination: {\n        lat: this.marketPosition.lat,\n        lng: this.marketPosition.lng\n      },\n      travelMode: 'DRIVING'\n    }, (response, status)=> {\n      if (status === 'OK') {\n        console.log(response);\n        console.log(this.directionsDisplay);\n        this.directionsDisplay.setDirections(response);\n      } \n    });\n  }\n\n  directionCliente(){\n    this.rumboCliente = true;\n    this.estado = 2;\n    this.ruta = false;\n    let directionsService = new google.maps.DirectionsService;\n    directionsService.route({\n      origin: this.currentPosition,\n      destination: this.pedido['ubicacionCliente'][0],\n      travelMode: 'DRIVING'\n    }, (response, status)=> {\n      if (status === 'OK') {\n        console.log(response);\n        console.log(this.directionsDisplay);\n        this.directionsDisplay.setDirections(response);\n      } \n    });\n  }\n\n\n  //alert que se muestra al usuario que dió click en ayuda para confirmar que realmente la necesite\n  // async Show_Help_Alert() {\n  //   const alert = await this.alertController.create({\n  //     header: \"¿Tienes algun Problema?\",\n  //     backdropDismiss: false,\n  //     message: \"Si deseas enviar tú ubicación para recibir ayuda de otro repartidor haz clic en continuar.\",\n  //     buttons: [\n  //       {\n  //         text: 'Cancel',\n  //         role: 'cancel',\n  //         cssClass: 'secondary'\n  //       },\n  //       {\n  //         text: 'Continuar',\n  //         cssClass: 'primary',\n  //         handler: () => {\n  //           this.waitDeliverResponse();\n  //           //para que no puda hacer click de nuevo en ayuda\n  //           this.helpDisabled = true;\n  //         }\n  //       }\n  //     ]\n  //   });\n  //   await alert.present();\n  // }\n\n  //establece que necesita ayuda en la BD y muestra alert de que espere por alguien que confirme que atenderá su alerta\n  // y se suscribe a la espera de que alguien confirme\n  //cuando alguien confirma cierra el ultimo alert de espera, detiene conexiones, muestra alert de que tal usuario atendió\n  //su alerta y traza ruta entre el y el repartidor que lo atendió y se suscribe a cambios de posicion del repartidor que atenió\n  //cuando el repartidor esta a menos de 30 mts de llegar entonces manda alerta de que ya anda por ahí :v \n  // async waitDeliverResponse() {\n  //   this.userService.setAlert(this.id, 1).subscribe(async (response: any) => {\n  //     if (response.status == \"success\") {\n  //       this.Show_Wait_Alert();\n  //       this.signalRService.startConnectionDeliverAlert();\n  //       this.signalRService.getDeliverResponse();\n  //       this.signalRService.getDeliverResponseSubscribe(this.id).subscribe(async (resp: any) => {\n  //         if (resp.message == \"Request Completed\") {\n  //           this.signalRService.DeliverResponseDataChange.subscribe(async (value: any) => {\n  //             if (value.length > 0) {\n  //               this.alertOfProblem.dismiss();\n  //               this.signalRService.stopConnectionDelivers();\n  //               //this.signalRService.stopConnectionOrders();\n  //               this.signalRService.stopConnectionAlertAcepted();\n  //               this.deleteDelivers();\n  //               this.Show_Confirm_Alert(value[0].nombre + ' ' + value[0].apellidoPaterno + ' se dirige a tu ubicación.');\n  //               var directionsService = new google.maps.DirectionsService;\n  //               var directionsDisplay = new google.maps.DirectionsRenderer;\n  //               directionsDisplay.setMap(this.mapa);\n  //               directionsDisplay.setOptions({ suppressMarkers: true, preserveViewport: true });\n  //               var cont = 0;\n  //               this.signalRService.startConnectionFollowDeliver();\n  //               this.signalRService.FollowDeliver();\n  //               this.signalRService.FollowDeliverResponseSubscribe(value[0].id_repartidor).subscribe((res: any) => {\n  //                 this.signalRService.FollowDeliverDataChange.subscribe(async (val: any) => {\n  //                   this.establecerRuta({ lat: val[0].latitud, lng: val[0].longitud }, this.currentPosition, directionsService, directionsDisplay);\n  //                   this.HelpMarker = this.setMarker(val[0].latitud, val[0].longitud, this.HelpMarker);\n  //                   if (cont == 0) {\n  //                     this.mapa.setCenter({ lat: val[0].latitud, lng: val[0].longitud });\n  //                     this.mapa.setZoom(16);\n  //                   }\n  //                   cont++;\n  //                   var service = new google.maps.DistanceMatrixService;\n  //                   var distance = await this.getDistance( { lat: val[0].latitud, lng: val[0].longitud }, this.currentPosition);\n  //                   if (distance < 30) {\n  //                     //this.signalRService.FollowDeliverDataChange.unsubscribe();\n  //                     this.signalRService.stopConnectionFollowDeliver();\n  //                     this.Show_New_Deliver_Arrived(value[0], directionsDisplay);\n  //                   }\n  //                 });\n  //               });\n\n  //             }\n  //           });\n  //         }\n  //       });\n  //     }\n  //   });\n  // }\n\n  //elimina los repartidores disponibles (estatus 3) que estaban como marcadores en el mapa\n  deleteDelivers() {\n    //eliminar marcadores de repartidores disponibles\n    for (var i in this.deliverMarkers) {\n      this.deliverMarkers[i].setMap(null);\n    }\n    this.deliverMarkers = [];\n  }\n\n  //muestra alert de espera...\n  async Show_Wait_Alert() {\n    this.alertOfProblem = await this.alertController.create({\n      backdropDismiss: false,\n      message: '<h5>Esepere en lo que un repartidor acepta su llamado.</h5><br/><ion-progress-bar type=\"indeterminate\" reversed=\"true\"></ion-progress-bar><br/>'\n    });\n    await this.alertOfProblem.present();\n  }\n\n  //muestra alert de quien fue quien acepto la alerta\n  async Show_Confirm_Alert(message: string) {\n    this.alertOfProblem = await this.alertController.create({\n      backdropDismiss: false,\n      header: 'Un repartidor atendio a tu llamado',\n      message: message,\n      buttons: ['OK']\n    });\n    await this.alertOfProblem.present();\n  }\n\n  //alert que se muestra cuando ya casi llega el repartidor que atendio alerta (30mts o menos) y se vuelve a suscribir a conexiones\n  // y regresa a la normalidad\n  async Show_New_Deliver_Arrived(repartidor, directionsDisplay) {\n    let alert = await this.alertController.create({\n      backdropDismiss: false,\n      header: 'Repartidor llegando...',\n      message: repartidor.nombre + ' ' + repartidor.apellidoPaterno + ' está por llegar a tu ubicación. Por favor presiona el boton de confirmar cuando el repartidor haya llegado.',\n      buttons: [\n        {\n          text: 'Confirmar',\n          cssClass: 'primary',\n          handler: () => {\n            this.userService.setAlert(this.id, 0).subscribe((respon: any) => { });\n            this.userService.setDeliverAtAlert(repartidor.id_repartidor, 0).subscribe((respon: any) => { });\n            directionsDisplay.setMap(null);\n            this.HelpMarker.setMap(null);\n            this.HelpMarker = undefined;\n            this.getDeliversPosition();\n            this.helpDisabled = false;\n            this.mapa.setCenter(this.currentPosition);\n            this.mapa.setZoom(14);\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n\n\n\n\n\n  //se suscribe a la espera de que alguien mande una alerta y si esa alerta no tiene asociado un repartidor que la atienda\n  //y el usuario actual no la rechazo anteriormente entonces manda alerta\n  // hearForAlert() {\n  //   this.signalRService.startConnectionListeningForAlert();\n  //   this.signalRService.listeningForAlert();\n  //   this.signalRService.listenForAlert().subscribe((response: any) => {\n  //     this.signalRService.deliversDataChange.subscribe((value: any) => {\n\n  //       if (value != null) {\n  //         for (var i = 0; i < value.length; i++) {\n  //           if (value[i].alerta && value[i].fk_Rep_At_Alerta == null && !this.rechazoAlerta) {\n  //             this.signalRService.stopConnectionListenDelivers();\n  //             this.existeAlerta(value, value[i]);\n  //           }\n  //         }\n  //       }\n\n  //     });\n  //   });\n  // }\n\n  //itera cada usuario que este diaponible y le manda la alerta de que alguien necesita ayuda en caso de existir este.\n  // async existeAlerta(arr, alerta) {\n  //   var service = new google.maps.DistanceMatrixService;\n  //   for (var i = 0; i < arr.length; i++) {\n  //     if (arr[i].estatus == 3) {\n  //       arr[i].distance = await this.getDistance(service, this.currentPosition, { lat: arr[i].latitud, lng: arr[i].longitud });\n  //     }\n  //   }\n  //   arr = this.menorDistancia(arr);\n  //   for (var h = 0; h < arr.length; h++) {\n  //     if (h < 5 && arr[h].estatus == 3 && this.id != alerta.id_repartidor && this.id == arr[h].id_repartidor) {\n  //       this.showEmergencyAlert(alerta.nombre + ' ' + alerta.apellidoPaterno, alerta);\n  //     }\n  //   }\n  // }\n\n  //recive un origen y un destino y dos objetos de google donde traza la ruta sobre el mapa de acuerdo a ese origen y fin \n  establecerRuta(origen, destino, directionsService, directionsDisplay) {\n    directionsService.route({\n      origin: origen,\n      destination: destino,\n      travelMode: 'DRIVING'\n    }, (response, status) => {\n      if (status == 'OK') {\n        //trazar ruta\n        directionsDisplay.setDirections(response);\n      } else {\n        console.log('Directions request failed due to ' + status);\n      }\n    });\n\n  }\n\n  //Alert que se muestra a los usuarios si alguien tuvo un problema, si acepta se establece al usuario que acepto en la base de datos\n  //deja de escuchar posicion de repartidores, deja de escuchar alertas, quita repartidores del mapa\n  //traza ruta entre el y el usuario destino y cuando está a menos de 30 metros manda alerta y se suscribe de nuevo a esperar alertas y a ver \n  //posicion de repartidores\n  // async showEmergencyAlert(name, userAlert) {\n  //   const al = await this.alertController.create({\n  //     header: \"ALERTA\",\n  //     backdropDismiss: false,\n  //     message: \"El repartidor \" + name + \" tuvo un problema, ¿Deseas ayudarlo?\",\n  //     buttons: [\n  //       {\n  //         text: 'Cancelar',\n  //         role: 'cancel',\n  //         cssClass: 'secondary',\n  //         handler: () => {\n  //           this.rechazoAlerta = true;\n  //           this.hearForAlert();\n  //         }\n  //       },\n  //       {\n  //         text: 'Ayudar',\n  //         cssClass: 'primary',\n  //         handler: () => {\n  //           this.userService.setDeliverAtAlert(userAlert.id_repartidor, this.id).subscribe((response: any) => {\n  //             if (response.status = \"success\") {\n  //               this.helpDisabled = true;\n  //               this.signalRService.stopConnectionDelivers();\n  //               this.deleteDelivers();\n  //               var directionsService = new google.maps.DirectionsService;\n  //               var directionsDisplay = new google.maps.DirectionsRenderer;\n  //               directionsDisplay.setMap(this.mapa);\n  //               directionsDisplay.setOptions({ suppressMarkers: true, preserveViewport: true });\n  //               let cont = 0;\n  //               this.establecerRuta(this.currentPosition, { lat: userAlert.latitud, lng: userAlert.longitud }, directionsService, directionsDisplay);\n  //               this.HelpMarker = this.setMarker(userAlert.latitud, userAlert.longitud, this.HelpMarker);\n  //               this.mapa.setZoom(16);\n  //               this.mapa.setCenter(this.currentPosition);\n  //               this.currentPosition2.subscribe(async (data) => {\n  //                 this.establecerRuta(this.currentPosition, { lat: userAlert.latitud, lng: userAlert.longitud }, directionsService, directionsDisplay);\n  //                 var service = new google.maps.DistanceMatrixService;\n  //                 var distance = await this.getDistance(this.currentPosition, { lat: userAlert.latitud, lng: userAlert.longitud });\n  //                 if (distance < 30) {\n  //                   //this.currentPosition2.unsubscribe();\n  //                   directionsDisplay.setMap(null);\n  //                   this.HelpMarker.setMap(null);\n  //                   this.helpDisabled = false;\n  //                   this.HelpMarker = undefined;\n  //                   this.mapa.setCenter(this.currentPosition);\n  //                   this.mapa.setZoom(14);\n  //                   if (userAlert.estatus > 3) {\n  //                     this.globalFunctions.Show_Ok_Alert('Has llegado', 'El repartidor al que has ayudado tenía pedidos pendientes, ahora es tu turno continuar con ellos.');\n  //                   }\n  //                   else {\n  //                     this.getDeliversPosition();\n  //                     this.globalFunctions.Show_Ok_Alert('Has llegado', 'Sabemos que has llegado con el repartidor que solicitó ayuda.');\n  //                   }\n  //                 }\n  //               });\n  //             }\n  //             else {\n  //               this.globalFunctions.Show_Ok_Alert('Hubo un problema', 'Lo sentimos. alguien más ha aceptado acudir a la ayuda antes que tu');\n  //               this.hearForAlert();\n  //             }\n  //           });\n  //         }\n  //       }\n  //     ]\n  //   });\n  //   await al.present();\n  // }\n\n  //burbuja pa' ordenar de menor distancia a mayor \n  menorDistancia(arr) {\n    for (var i = 1; i < arr.length; i++) {\n      for (var j = 0; j < (arr.length - i); j++) {\n        if (arr[j].distance > arr[j + 1].distance) {\n          let aux = arr[j];\n          arr[j] = arr[j + 1];\n          arr[j + 1] = aux;\n        }\n      }\n    }\n    return arr;\n  }\n\n  //recive a repartidores disponibles (estatus 3) y los coloca en el mapa y los guarda en un array para su posterior control \n  placeDeliversMarkers(delivers: any) {\n    var icon = {\n      url: \"assets/marker.png\",\n      scaledSize: new google.maps.Size(30, 50)\n    };\n    if (delivers.length != this.deliverMarkers.length) {\n      //remove markers from map\n      for (var i in this.deliverMarkers) {\n        this.deliverMarkers[i].setMap(null);\n      }\n      this.deliverMarkers = [];\n      //setMarkersinMap\n      for (var i in delivers) {\n        if (delivers[i].id_repartidor != this.id) {\n          let marker = new google.maps.Marker({\n            position: { lat: delivers[i].latitud, lng: delivers[i].longitud },\n            map: this.mapa,\n            icon: icon\n          });\n          this.deliverMarkers.push(marker);\n        }\n      }\n    }\n    else {\n      for (var i in this.deliverMarkers) {\n        if (delivers[i].id_repartidor != this.id) {\n          this.deliverMarkers[i].setPosition({ lat: delivers[i].latitud, lng: delivers[i].longitud });\n        }\n      }\n    }\n  }\n\n  //obtiene una unica vez los establecimientos registrados en la base de datos, obtiene las coordenadas de cada uno de ellos\n  // y los establece en el mapa\n  // getEstablishments() {\n  //   var icon = {\n  //     url: \"assets/markerStore.png\",\n  //     scaledSize: new google.maps.Size(30, 50)\n  //   };\n  //   this.signalRService.getEstablishments().subscribe(async (response: any) => {\n  //     if (response.status = \"success\") {\n  //       var geocoder = new google.maps.Geocoder();\n  //       for (var i in response.establishments) {\n  //         var address = response.establishments[i].calle + ' ' + response.establishments[i].numeroExt + ' ' + response.establishments[i].colonia + ' ' + response.establishments[i].ciudad + ' ' + response.establishments[i].estado;\n  //         var coords = await this.geocodeAddress(geocoder, address);\n  //         let marker = new google.maps.Marker({\n  //           position: coords,\n  //           map: this.mapa,\n  //           icon: icon\n  //         });\n  //       }\n  //     }\n  //   });\n  // }\n\n  //recive como parametro un objeto geocoder de google y una dirección en formato de texto ejemplo:\"las carmelitas #39\" y retorna \n  // esa misma ubicación en coordenadas\n  async geocodeAddress(geocoder, address) {\n    return new Promise(resolve => {\n      geocoder.geocode({ 'address': address }, function (results, status) {\n        if (status == 'OK') {\n          resolve(results[0].geometry.location);\n        } else {\n          console.log('Geocode was not successful for the following reason: ' + status);\n        }\n      });\n    });\n  }\n\n  //obtiene cada 5 segundos (creo) los repartidores de estatus 3 (en linea y disponibles) y sus posiciones y los manda a otra función\n  getDeliversPosition() {\n    this.signalRService.startConnection();\n    this.signalRService.getDeliversPosition();\n    this.signalRService.getDeliversLocation().subscribe((response: any) => {\n      if (response.message == \"Request Completed\") {\n        this.signalRService.dataChange.subscribe((value) => {\n          if (value != null) {\n            this.placeDeliversMarkers(value);\n            this.delivers = value;\n          }\n        });\n      }\n      console.log(response);\n    });\n  }\n\n  //cuando inicia esta pantalla obtiene datos del storage provenientes del login, carga el mapa, se suscribe a la espera de pedidos\n  //y se suscribe a la espera de alertas de algun repartidor\n  ngOnInit() {\n    this.storage.get('user_Data').then((val) => {\n      // this.events.publish('emitUserData', val);\n      this.id = val.id_repartidor;\n      setTimeout(()=>{\n        this.loadMap();\n      },0);\n      \n      // this.hearForAlert();\n    });\n  }\n\n  listenPedidos(){\n    this.pedidosSuscribe =  this.afdb.object(\"pedidos/\"+this.id).snapshotChanges().subscribe(data=>{\n      this.pedido = data.payload.val();\n      if(this.pedido){\n        if(this.pedido['status'] == 1){\n          this.newPedido();\n          }\n        }\n    });\n  }\n\n  repartidoresUbicacion(){\n    this.repartidorSubscribe = this.afdb.list(\"ubicacion\").snapshotChanges().subscribe(data=>{\n      data.map(data=>{\n        if(data.key != this.id){\n          if(this.repartidoresMarkers.hasOwnProperty(data.key)){\n            this.repartidoresMarkers[data.key].setPosition({\n              lat: data.payload.val()['lat'],\n              lng: data.payload.val()['lng']\n            });\n\n          }\n          else{\n            this.repartidoresMarkers[data.key] = new google.maps.Marker({\n              position: {\n                lat: data.payload.val()['lat'],\n                lng: data.payload.val()['lng']\n              },\n              map: this.mapa\n            });\n          }\n        }\n      });\n    });\n  }\n\n  //crea el mapa y una vez cargado, pone los controles, obtiene los establecimientos y los repartidores con estatus 3 (en linea)\n  //y se suscribe a un evento que cada que el usuario cambia de posicion cambia el marcador también y guarda su posicion en la BD\n  async loadMap() {\n    let position = await this.getCurrentPosition();\n    console.log(position);\n    //crear mapa\n    this.mapa = new google.maps.Map(document.getElementById('map'), {\n      center: position,\n      zoom: 14,\n      disableDefaultUI: true,\n      minZoom: 4,\n    });\n\n    this.directionsDisplay = new google.maps.DirectionsRenderer();\n\n    this.directionsDisplay.setMap(this.mapa);\n\n    google.maps.event.addListenerOnce(this.mapa, 'idle', ()=>{\n      console.log(\"hola\");\n      this.repartidoresUbicacion();\n      setTimeout(()=>{\n        this.listenPedidos();\n\n      },1000);\n    });\n\n    console.log(this.directionsDisplay);\n\n    this.setMapControls();\n    this.currentPosition.lat = position.lat;\n    this.currentPosition.lng = position.lng;\n    let watch = this.geolocation.watchPosition();\n    watch.subscribe((data) => {\n      console.log(this.pedido['ubicacionCliente']);\n      \n      this.afdb.database.ref(\"ubicacion/\"+this.id).set({\n        lat: data.coords.latitude,\n        lng: data.coords.longitude\n      });\n      let i = 0;\n      let deltaLat;\n      let deltaLng;\n      deltaLat = (data.coords.latitude - this.currentPosition.lat)/100;\n      deltaLng = (data.coords.longitude - this.currentPosition.lng)/100;\n\n      if(this.rumboCliente){\n        console.log(this.clientPosition);\n        this.getDistance({\n          lat: data.coords.latitude,\n          lng: data.coords.longitude\n        },{\n          lat: this.clientPosition.lat,\n          lng: this.clientPosition.lng\n        });\n  \n      }\n      else{\n        this.getDistance({\n          lat: data.coords.latitude,\n          lng: data.coords.longitude\n        },{\n          lat: this.marketPosition.lat,\n          lng: this.marketPosition.lng\n        });\n  \n      }\n\n    \n      this.moverMarker(i, deltaLat, deltaLng);\n      \n      // this.currentPosition2.next({ lat: data.coords.latitude, lng: data.coords.longitude });\n      // this.signalRService.setCurrentPosition({ latitud: data.coords.latitude, longitud: data.coords.longitude, id_repartidor: this.id }).subscribe((response: any) => { console.log(response.status) });\n    });\n    // google.maps.event.addListenerOnce(this.mapa, 'idle', () => {\n    //   debugger;\n    //   this.setMapControls();\n    //   this.getEstablishments();\n    //   let watch = this.geolocation.watchPosition();\n    //   watch.subscribe((data) => {\n    //     this.myMarker = this.setMarker(data.coords.latitude, data.coords.longitude, this.myMarker);\n    //     this.currentPosition = { lat: data.coords.latitude, lng: data.coords.longitude };\n    //     // this.currentPosition2.next({ lat: data.coords.latitude, lng: data.coords.longitude });\n    //     // this.signalRService.setCurrentPosition({ latitud: data.coords.latitude, longitud: data.coords.longitude, id_repartidor: this.id }).subscribe((response: any) => { console.log(response.status) });\n    //   });\n    // });\n  }\n\n   getDistance(origin, destination) {\n    let service = new google.maps.DistanceMatrixService;\n      service.getDistanceMatrix({\n        origins: [origin],\n        destinations: [destination],\n        travelMode: 'DRIVING',\n        unitSystem: google.maps.UnitSystem.METRIC,\n        avoidHighways: false,\n        avoidTolls: false\n      }, (response, status) => {\n        console.log(response);\n        console.log(status);\n        if (status == 'OK') {\n          if (response.rows[0].elements[0].status != 'ZERO_RESULTS') {\n            console.log(response.rows[0].elements[0]['distance']['value']);\n            if(response.rows[0].elements[0]['distance']['value'] < 250){\n              if(this.rumboCliente){\n                this.rutaCliente = true;\n              }\n              else{\n                this.ruta = true;\n\n              }\n            }\n            else if(this.rumboCliente){\n              this.rutaCliente = false\n            }\n            \n            else{\n              this.ruta = false;\n            }\n          }\n        }\n      });\n  }\n\n  moverMarker(i, deltaLat, deltaLng){\n    this.currentPosition.lat += deltaLat;\n    this.currentPosition.lng += deltaLng;\n    this.myMarker = this.setMarker(this.currentPosition.lat, this.currentPosition.lng, this.myMarker);\n      if(i == 100){\n        this.mapa.panTo({\n          lat: this.currentPosition.lat,\n          lng: this.currentPosition.lng\n        });\n      }\n    if(i!=100){\n      i++;\n      setTimeout( ()=>{\n        this.moverMarker(i,deltaLat, deltaLng);\n      },10);\n    }\n\n\n  }\n\n  centrar(){\n    this.myMarker = this.setMarker(this.currentPosition.lat, this.currentPosition.lng, this.myMarker);\n    this.mapa.panTo({\n      lat: this.currentPosition.lat,\n      lng: this.currentPosition.lng\n    });\n    setTimeout(()=>{\n      console.log(this.mapa.getZoom());\n      this.mapa.setZoom(18);\n    },1000)  \n  }\n\n  repartidoresUnsubscribe(){\n    for (const key in this.repartidoresMarkers) {\n      this.repartidoresMarkers[key].setMap(null);\n    }\n    this.repartidoresMarkers = {};\n    this.repartidorSubscribe.unsubscribe();\n  }\n\n\n\n  //establece imagenes y botones sobre el mapa de google\n  setMapControls() {\n    this.mapa.controls[google.maps.ControlPosition.TOP_CENTER].push(document.getElementById('logo'));\n    this.mapa.controls[google.maps.ControlPosition.TOP_LEFT].push(document.getElementById('icon'));\n    this.mapa.controls[google.maps.ControlPosition.TOP_RIGHT].push(document.getElementById('btnGroup'));\n  }\n\n  //Obtiene y devuelve la posicion actual\n  async getCurrentPosition() {\n    let position = await this.geolocation.getCurrentPosition();\n    return { lat: position.coords.latitude, lng: position.coords.longitude };\n  }\n\n  //funcionalidad de ocultar y mostrar menú lateral\n  toggleSideMenu() {\n    this.menu.toggle('menu');\n  }\n\n  //pone un marcador en el mapa, recibe el objeto marker y las posiciones \n  setMarker(lat: number, lng: number, marker) {\n    if (marker != undefined) {\n      marker.setPosition({ lat: lat, lng: lng });\n    }\n    else {\n      marker = new google.maps.Marker({\n        position: { lat: lat, lng: lng },\n        map: this.mapa\n      });\n    }\n    return marker;\n  }\n\n\n\n  //se suscribe a la espera de pedidos y si exise alguno entonces detiene la obtencion de ordenes y manda la orden a otra función\n  getPedidos() {\n    this.signalRService.startConnection2();\n    this.signalRService.getNotAsignedOrders();\n    this.signalRService.getUnasignedOrders().subscribe((response: any) => {\n      if (response.message == \"Request Completed\") {\n        this.signalRService.ordersDataChange.subscribe((value) => {\n          if (value != null && value.length > 0) {\n            if (this.delivers.length > 0) {\n              this.signalRService.stopConnectionOrders();\n              this.asignDeliverToOrder(value, this.delivers);\n            }\n          }\n        });\n      }\n      console.log(response);\n    });\n  }\n\n  //recive orden u ordenes y a los repartidores disponibles (estatus 3), obtiene coordenadas del restaurante y obtiene la distancia \n  //entre este y cada uno de los repartidores disponibles y la asigna al más cercano (aún no funciona chido)\n  async asignDeliverToOrder(orders, delivers) {\n    ////////obtener lat y lng de cada restaurante\n    var geocoder = new google.maps.Geocoder();\n    var service = new google.maps.DistanceMatrixService;\n    if (orders.length > 0) {\n      for (var i in orders) {\n        var add = orders[i].calle + ' ' + orders[i].numeroExt + ' ' + orders[i].colonia + ' ' + orders[i].municipio + ' ' + orders[i].estado;\n        orders[i].coords = await this.geocodeAddress(geocoder, add);\n      }\n      if (orders.length == 1) {\n        //cambiar condicion de este if, si el numero de pedido solo tiene un negocio entonces...\n        for (var i in delivers) {\n          delivers[i].distance = await this.getDistance({ lat: delivers[i].latitud, lng: delivers[i].longitud }, orders[0].coords);\n        }\n        delivers = this.menorDistancia(delivers);\n        if (this.id == delivers[0].id_repartidor) {\n          this.Show_New_Order(orders[0]);\n        }\n      }\n      else {\n        //si el pedido es a más de un negocio entonces...\n        //ordenar por subcategorias\n        //comida preparada al final\n\n      }\n    }\n\n\n\n\n    ///////calcular distancia minima entre repartidores con estatus 3 y jalar al menor\n    ///////si existe y la distancia es menor a 1km, se asigna al repartidor con estatatus 3\n    ///////si existe y la distancia es mayor a 1km, entra\n    ///////////obtener repartidor con estatus 5 donde la suma de la distancia desde su ubicacion al destino que se dirige\n    ///////////más la distancia de su detino al restaurante a recoger es por al menos 1 km menor a la distancia del menor repartidor con estatus 3\n    ///////////si existe este caso, se asigna a cola\n    ///////////si no existe este caso, se asigna a 3\n    ///////si no existe 3\n    ///////////obtener repartidor con estatus 5 donde la suma de la distancia desde su ubicacion al \n    ///////////destino que se dirige, más la distancia de su detino al restaurante a recoger es la menor\n\n    ///////Asignar repartidor a cada orden\n    //\n    //cambiar estatus e id_repartidor en cada pedido y estatus de repartidor \n  }\n\n  //alert de que existe nueva orden y tu eres el más cercano donde puedes aceptar o rechazar (falta esa funcionalidad)\n  async Show_New_Order(orden) {\n    const alert = await this.alertController.create({\n      header: \"Nueva Orden\",\n      backdropDismiss: false,\n      message: \"¿Deseas aceptar la solicitud de orden?\",\n      buttons: [\n        {\n          text: 'Rechazar',\n          role: 'cancel',\n          cssClass: 'danger',\n          handler: () => {\n            //this.getPedidos();\n            //buscar siguiente más cercano\n          }\n        },\n        {\n          text: 'Aceptar',\n          cssClass: 'primary',\n          handler: () => {\n            console.log(orden);\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { InfoPedidoPage } from './info-pedido.page';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n  ],\n  declarations: [InfoPedidoPage]\n})\nexport class InfoPedidoPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\" (click)=\\\"cerrarModal()\\\">\\n          <ion-button color=\\\"secondary\\\">\\n            <ion-icon slot=\\\"icon-only\\\" name=\\\"close\\\"></ion-icon>\\n          </ion-button>\\n        </ion-buttons>\\n    <ion-title>informacion del Pedido</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n\\n<h3>Cliente</h3>\\n<p>Jesus Adrian Quiroz Palacios.</p>\\n<p>Paseo de la Fundacion 3314, Villas de Irapuato</p>\\n\\n<h3>Productos</h3>\\n<p>2 Enchiladas Mayas Toks</p>\\n<p>Total $360</p>\\n\\n<h3>Negocio</h3>\\n<p>Toks</p>\\n<p>Blvd. Villas de Irapuato #1443, Int. A-31</p>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2luZm8tcGVkaWRvL2luZm8tcGVkaWRvLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { NavParams } from '@ionic/angular';\n\n@Component({\n  selector: 'app-info-pedido',\n  templateUrl: './info-pedido.page.html',\n  styleUrls: ['./info-pedido.page.scss'],\n})\nexport class InfoPedidoPage implements OnInit {\n\n  constructor(public modalController: ModalController,\n    public navParams: NavParams) { }\n\n  ngOnInit() {\n    console.log(this.navParams.data);\n  }\n\n  cerrarModal(){\n    this.modalController.dismiss();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\nimport { HttpClient } from '@angular/common/http';\nimport { UserService } from 'src/app/services/user/user.service';\nimport { SignalRService } from 'src/app/services/signalr/signal-r.service';\n\ndeclare var google;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n\n  constructor(public alertController: AlertController,\n    private http: HttpClient,\n    public userService: UserService,\n    public signalRService: SignalRService) { }\n\n\n  \n//aqui iba a meter funcionalidades del home.ts para que no estuviera tan cargado pero ya no lo hicé :v\n\n\n\n}\n","import { Injectable, ViewChild } from '@angular/core';\nimport * as signalR from \"@aspnet/signalr\";\nimport { user } from 'src/interfaces/user.interface';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignalRService {\n\n  constructor(private http: HttpClient) { }\n\n  //observables \n  public dataChange: Subject<user[]> = new Subject<user[]>();\n  public ordersDataChange: Subject<object[]> = new Subject<object[]>();\n  public DeliverResponseDataChange: Subject<user[]> = new Subject<user[]>();\n  public FollowDeliverDataChange: Subject<user[]> = new Subject<user[]>();\n  public deliversDataChange: Subject<user[]> = new Subject<user[]>();\n\n  //url de la webapi\n  URL: string = \"https://localhost:5001/api/\";\n\n  private hubConnection: signalR.HubConnection;\n  private hubConnection2: signalR.HubConnection;\n  private hubConnection3: signalR.HubConnection;\n  private hubConnection4: signalR.HubConnection;\n  private hubConnection5: signalR.HubConnection;\n\n  //inicia conexion para escuchar cambios de posición en los repartidores disponibles (estatus 3)\n  startConnection() {\n    this.hubConnection = new signalR.HubConnectionBuilder()\n      .withUrl('https://localhost:5001/map/getDeliversPosition')\n      .build();\n\n    this.hubConnection\n      .start()\n      .then(() => console.log('Connection started'))\n      .catch(err => console.log('Error while starting connection: ' + err))\n  }\n\n  //se suscribe a esa url y cada 5 segundos trae datos que se almacenan en this.dataChange\n  getDeliversPosition() {\n    this.hubConnection.on('getDeliversPosition', (data) => {\n      this.dataChange.next(data.result);\n    });\n  }\n\n  //se llama a la url para suscribirse\n  getDeliversLocation() {\n    return this.http.get(this.URL + 'map/getDeliversPosition');\n  }\n\n  //se detiene conexion, creo que esto no funcionaba correctamente\n  stopConnectionDelivers() {\n    this.hubConnection.stop();\n    this.hubConnection = null;\n  }\n\n\n\n\n\n  //guarda la posicion actual en la BD\n  setCurrentPosition(data: any) {\n    let params = JSON.stringify(data);\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.put(this.URL + 'map/saveDeliverPosition', params, { headers: headers });\n  }\n\n  //obtiene los establecimientos guardados en la base de datos\n  getEstablishments() {\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.get(this.URL + 'map/getEstablishments', { headers: headers });\n  }\n\n\n\n\n//inicia conexion para obtener pedidos no asignados (yo asumí que eran los de estaus 2)\n  startConnection2() {\n    this.hubConnection2 = new signalR.HubConnectionBuilder()\n      .withUrl('https://localhost:5001/orders/getNotAsignedOrders')\n      .build();\n\n    this.hubConnection2\n      .start()\n      .then(() => console.log('Connection started'))\n      .catch(err => console.log('Error while starting connection: ' + err))\n  }\n\n  getNotAsignedOrders() {\n    this.hubConnection2.on('getNotAsignedOrders', (data) => {\n      this.ordersDataChange.next(data.result);\n    });\n  }\n\n  getUnasignedOrders() {\n    return this.http.get(this.URL + 'orders/getNotAsignedOrders');\n  }\n\n  //se detiene conexion, creo que esto no funcionaba correctamente\n  stopConnectionOrders() {\n    this.hubConnection2.stop();\n    this.hubConnection2 = null;\n  }\n\n\n\n\n  // inia conexion para saber cuando un repartidor acepto alerta\n  startConnectionDeliverAlert() {\n    this.hubConnection3 = new signalR.HubConnectionBuilder()\n      .withUrl('https://localhost:5001/user/getDeliverResponse')\n      .build();\n\n    this.hubConnection3\n      .start()\n      .then(() => console.log('Connection started'))\n      .catch(err => console.log('Error while starting connection: ' + err))\n  }\n\n  getDeliverResponse() {\n    this.hubConnection3.on('getDeliverResponse', (data) => {\n      this.DeliverResponseDataChange.next(data.result);\n    });\n  }\n\n  getDeliverResponseSubscribe(_id: number) {\n    let params = new HttpParams().set('id_repartidor', _id.toString());\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.get(this.URL + 'user/getDeliverResponse', { headers: headers, params: params });\n  }\n\n  //se detiene conexion, creo que esto no funcionaba correctamente\n  stopConnectionAlertAcepted() {\n    this.hubConnection3.stop();\n    this.hubConnection3 = null;\n  }\n\n\n\n\n  //inicia conexión para seguir posición del repartidor que atendió alerta\n  startConnectionFollowDeliver() {\n    this.hubConnection4 = new signalR.HubConnectionBuilder()\n      .withUrl('https://localhost:5001/map/FollowDeliverPosition')\n      .build();\n\n    this.hubConnection4\n      .start()\n      .then(() => console.log('Connection started'))\n      .catch(err => console.log('Error while starting connection: ' + err))\n  }\n\n  FollowDeliver() {\n    this.hubConnection4.on('FollowDeliverPosition', (data) => {\n      this.FollowDeliverDataChange.next(data.result);\n    });\n  }\n\n  FollowDeliverResponseSubscribe(_id: number) {\n    let params = new HttpParams().set('id_repartidor', _id.toString());\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.get(this.URL + 'map/FollowDeliverPosition', { headers: headers, params: params });\n  }\n\n  //se detiene conexion, creo que esto no funcionaba correctamente\n  stopConnectionFollowDeliver() {\n    this.hubConnection4.stop();\n    this.hubConnection4 = null;\n  }\n\n\n  //inicia conexión para saber cuando alguien solicitó ayuda\n  startConnectionListeningForAlert() {\n    this.hubConnection5 = new signalR.HubConnectionBuilder()\n      .withUrl('https://localhost:5001/map/listenForAlert')\n      .build();\n\n    this.hubConnection5\n      .start()\n      .then(() => console.log('Connection started'))\n      .catch(err => console.log('Error while starting connection: ' + err))\n  }\n\n  listeningForAlert() {\n    this.hubConnection5.on('listenForAlert', (data) => {\n      this.deliversDataChange.next(data.result);\n    });\n  }\n\n  listenForAlert() {\n    return this.http.get(this.URL + 'map/listenForAlert');\n  }\n\n  //se detiene conexion, creo que esto no funcionaba correctamente\n  stopConnectionListenDelivers() {\n    //this.hubConnection5.off('listenForAlert');\n    this.hubConnection5.stop();\n    this.hubConnection5 = null;\n  }\n\n\n}\n"],"sourceRoot":""}